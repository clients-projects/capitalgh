{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadPlugin = void 0;\n\nvar LinkInstance_1 = require(\"./LinkInstance\");\n\nvar Plugin = /*#__PURE__*/function () {\n  function Plugin() {\n    _classCallCheck(this, Plugin);\n\n    this.id = \"links\";\n  }\n\n  _createClass(Plugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new LinkInstance_1.LinkInstance(container);\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin() {\n      return true;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions() {}\n  }]);\n\n  return Plugin;\n}();\n\nfunction loadPlugin(_x) {\n  return _loadPlugin.apply(this, arguments);\n}\n\nfunction _loadPlugin() {\n  _loadPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tsParticles) {\n    var plugin;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            plugin = new Plugin();\n            _context.next = 3;\n            return tsParticles.addPlugin(plugin);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadPlugin.apply(this, arguments);\n}\n\nexports.loadPlugin = loadPlugin;","map":null,"metadata":{},"sourceType":"script"}