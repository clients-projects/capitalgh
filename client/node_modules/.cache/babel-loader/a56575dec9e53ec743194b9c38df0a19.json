{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcrypto/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/Dashboard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Card } from '../../components/Card/Card';\nimport { StatsCard } from '../../components/StatsCard/StatsCard';\nimport { dataPie, legendPie } from '../../variables/Variables';\nimport * as actions from '../../store/actions/burgerIndex';\nimport CrytoMarketWatch from '../../tradeviewWidgets/CryptoMarketWatch';\n\nconst Dashboard = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        totalReceivedAmount = _useState2[0],\n        setTotalReceivedAmount = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        totalDisbursedAmount = _useState4[0],\n        setTotalDisbursedAmount = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pendingWithdrawalsCount = _useState6[0],\n        setPendingWithdrawalsCount = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        pendingDepositsCount = _useState8[0],\n        setPendingDepositsCount = _useState8[1];\n\n  const createLegend = json => {\n    var legend = [];\n\n    for (var i = 0; i < json['names'].length; i++) {\n      var type = 'fa fa-circle text-' + json['types'][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }));\n      legend.push(' ');\n      legend.push(json['names'][i]);\n    }\n\n    return legend;\n  };\n\n  useEffect(() => {\n    if (props.tokenId) {\n      props.onInitGetFunds(props.tokenId);\n    }\n\n    console.log('before total disbursed', props.totalDisbursedAmount);\n\n    if (props.totalDisbursedAmount) {\n      console.log('after total disbursed', props.totalDisbursedAmount);\n      setTotalDisbursedAmount(props.totalDisbursedAmount);\n      setTotalReceivedAmount(props.totalReceivedAmount);\n      setPendingDepositsCount(props.pendingDepositsCount);\n      setPendingWithdrawalsCount(props.pendingWithdrawalsCount);\n    }\n\n    console.log('received amount', props.totalReceivedAmount);\n  }, [props]);\n  console.log({\n    totalReceivedAmount\n  });\n  const displayDisbursed = \"$\".concat(totalDisbursedAmount);\n  const displayReceived = \"$\".concat(totalReceivedAmount);\n  const displayWithdrawalsCount = pendingWithdrawalsCount;\n  const displayDepositsCount = pendingDepositsCount;\n  console.log({\n    displayReceived\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StatsCard, {\n    bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pe-7s-server text-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }),\n    statsText: \"Total Funds Disbursed\",\n    statsValue: displayDisbursed,\n    statsIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-refresh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }\n    }),\n    statsIconText: \"Updated now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StatsCard, {\n    bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pe-7s-wallet text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }),\n    statsText: \"Total Funds received\",\n    statsValue: displayReceived,\n    statsIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-calendar-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 40\n      }\n    }),\n    statsIconText: \"Updated now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StatsCard, {\n    bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pe-7s-graph1 text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }\n    }),\n    statsText: \"Withdrawal Requests\",\n    statsValue: displayWithdrawalsCount,\n    statsIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-clock-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 40\n      }\n    }),\n    statsIconText: \"Updated now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StatsCard, {\n    bigIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pe-7s-cash text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }\n    }),\n    statsText: \"Investment Requests\",\n    statsValue: displayDepositsCount,\n    statsIcon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-refresh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 40\n      }\n    }),\n    statsIconText: \"Updated now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '4rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '70vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CrytoMarketWatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    statsIcon: \"fa fa-clock-o\",\n    title: \"Transactions\",\n    category: \"investment activities\",\n    stats: \"Updated now\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartPreferences\",\n      className: \"ct-chart ct-perfect-fourth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataPie,\n      type: \"Pie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, createLegend(legendPie)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  console.log({\n    state\n  });\n  return {\n    err: state.auth.error,\n    loading: state.user.loading,\n    redirectToLoginPage: state.auth.redirect,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    totalReceivedAmount: state.auth.totalReceivedAmount,\n    totalDisbursedAmount: state.auth.totalDisbursedAmount,\n    pendingDepositsCount: state.auth.pendingDepositsCount,\n    pendingWithdrawalsCount: state.auth.pendingWithdrawalsCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetFunds: token => dispatch(actions.initGetFunds(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/Dashboard.jsx"],"names":["React","useEffect","useState","ChartistGraph","Grid","Row","Col","connect","Card","StatsCard","dataPie","legendPie","actions","CrytoMarketWatch","Dashboard","props","totalReceivedAmount","setTotalReceivedAmount","totalDisbursedAmount","setTotalDisbursedAmount","pendingWithdrawalsCount","setPendingWithdrawalsCount","pendingDepositsCount","setPendingDepositsCount","createLegend","json","legend","i","length","type","push","tokenId","onInitGetFunds","console","log","displayDisbursed","displayReceived","displayWithdrawalsCount","displayDepositsCount","marginTop","height","mapStateToProps","state","err","auth","error","loading","user","redirectToLoginPage","redirect","userId","mapDispatchToProps","dispatch","token","initGetFunds"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ChartistGraph from 'react-chartist'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { Card } from '../../components/Card/Card'\nimport { StatsCard } from '../../components/StatsCard/StatsCard'\nimport { dataPie, legendPie } from '../../variables/Variables'\n\nimport * as actions from '../../store/actions/burgerIndex'\nimport CrytoMarketWatch from '../../tradeviewWidgets/CryptoMarketWatch'\n\nconst Dashboard = (props) => {\n    const [totalReceivedAmount, setTotalReceivedAmount] = useState(0)\n    const [totalDisbursedAmount, setTotalDisbursedAmount] = useState(0)\n    const [pendingWithdrawalsCount, setPendingWithdrawalsCount] = useState(0)\n    const [pendingDepositsCount, setPendingDepositsCount] = useState(0)\n\n    const createLegend = (json) => {\n        var legend = []\n        for (var i = 0; i < json['names'].length; i++) {\n            var type = 'fa fa-circle text-' + json['types'][i]\n            legend.push(<i className={type} key={i} />)\n            legend.push(' ')\n            legend.push(json['names'][i])\n        }\n        return legend\n    }\n\n    useEffect(() => {\n        if (props.tokenId) {\n            props.onInitGetFunds(props.tokenId)\n        }\n\n        console.log('before total disbursed', props.totalDisbursedAmount)\n        if (props.totalDisbursedAmount) {\n            console.log('after total disbursed', props.totalDisbursedAmount)\n            setTotalDisbursedAmount(props.totalDisbursedAmount)\n            setTotalReceivedAmount(props.totalReceivedAmount)\n            setPendingDepositsCount(props.pendingDepositsCount)\n            setPendingWithdrawalsCount(props.pendingWithdrawalsCount)\n        }\n\n        console.log('received amount', props.totalReceivedAmount)\n    }, [props])\n\n    console.log({totalReceivedAmount})\n\n    const displayDisbursed =  `$${totalDisbursedAmount}`\n    const displayReceived = `$${totalReceivedAmount}`\n    const displayWithdrawalsCount = pendingWithdrawalsCount\n    const displayDepositsCount = pendingDepositsCount\n\n    console.log({displayReceived})\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col lg={3} sm={6}>\n                        <StatsCard\n                            bigIcon={\n                                <i className='pe-7s-server text-warning' />\n                            }\n                            statsText='Total Funds Disbursed'\n                            statsValue= {displayDisbursed}\n                            statsIcon={<i className='fa fa-refresh' />}\n                            statsIconText='Updated now'\n                        />\n                    </Col>\n                    <Col lg={3} sm={6}>\n                        <StatsCard\n                            bigIcon={\n                                <i className='pe-7s-wallet text-success' />\n                            }\n                            statsText='Total Funds received'\n                            statsValue={displayReceived}\n                            statsIcon={<i className='fa fa-calendar-o' />}\n                            statsIconText='Updated now'\n                        />\n                    </Col>\n                    <Col lg={3} sm={6}>\n                        <StatsCard\n                            bigIcon={<i className='pe-7s-graph1 text-danger' />}\n                            statsText='Withdrawal Requests'\n                            statsValue= {displayWithdrawalsCount}\n                            statsIcon={<i className='fa fa-clock-o' />}\n                            statsIconText='Updated now'\n                        />\n                    </Col>\n                    <Col lg={3} sm={6}>\n                        <StatsCard\n                            bigIcon={<i className='pe-7s-cash text-info' />}\n                            statsText='Investment Requests'\n                            statsValue= {displayDepositsCount}\n                            statsIcon={<i className='fa fa-refresh' />}\n                            statsIconText='Updated now'\n                        />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: '4rem' }}>\n                    <Col md={8}>\n                        <div style={{ height: '70vh' }}>\n                            <CrytoMarketWatch />\n                        </div>\n                    </Col>\n                    <Col md={4}>\n                        <Card\n                            statsIcon='fa fa-clock-o'\n                            title='Transactions'\n                            category='investment activities'\n                            stats='Updated now'\n                            content={\n                                <div\n                                    id='chartPreferences'\n                                    className='ct-chart ct-perfect-fourth'\n                                >\n                                    <ChartistGraph data={dataPie} type='Pie' />\n                                </div>\n                            }\n                            legend={\n                                <div className='legend'>\n                                    {createLegend(legendPie)}\n                                </div>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log({state})\n    return {\n        err: state.auth.error,\n        loading: state.user.loading,\n        redirectToLoginPage: state.auth.redirect,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        totalReceivedAmount: state.auth.totalReceivedAmount,\n        totalDisbursedAmount: state.auth.totalDisbursedAmount,\n        pendingDepositsCount: state.auth.pendingDepositsCount,\n        pendingWithdrawalsCount: state.auth.pendingWithdrawalsCount,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetFunds: (token) => dispatch(actions.initGetFunds(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}