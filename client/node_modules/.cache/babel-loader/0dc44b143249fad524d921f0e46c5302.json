{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport update from '../utility';\nconst initialState = {\n  error: null,\n  loading: false,\n  usersData: {},\n  getUsers: [],\n  investNow: [],\n  withdrawNow: [],\n  getUserDepositHistory: [],\n  getUserWithdrawalHistory: []\n};\n\nconst getAdminSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    adminData: action.data\n  });\n};\n\nconst updateProfileStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst updateProfileSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    getUsers: action.data\n  });\n};\n\nconst updateMemberSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    updatedMember: action.data\n  });\n};\n\nconst updateProfitSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    updatedProfit: action.data\n  });\n};\n\nconst updateProfileFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst getUserHistoryStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst getUserHistorySuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    getUserDepositHistory: action.data.getDepositHistory,\n    getUserWithdrawalHistory: action.data.getWithdrawalHistory\n  });\n};\n\nconst getUserHistoryFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst investNowStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst investNowSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    investNow: action.data\n  });\n};\n\nconst investNowApprovalSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    investNowApprovalSuccess: true\n  });\n};\n\nconst investNowFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst withdrawNowStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst withdrawNowSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    withdrawNow: action.data\n  });\n};\n\nconst withdrawNowApprovalSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    withdrawNowApprovalSuccess: true\n  });\n};\n\nconst withdrawNowFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst getUsersFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst getUsersStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst getUsersSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    usersData: action.data.getUser,\n    usersId: action.data.getUsersId\n  });\n};\n\nconst handleUsers = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ADMIN_SUCCESS:\n      return getAdminSuccess(state, action);\n\n    case actionTypes.USER_HISTORY_START:\n      return getUserHistoryStart(state, action);\n\n    case actionTypes.USER_HISTORY_SUCCESS:\n      return getUserHistorySuccess(state, action);\n\n    case actionTypes.USER_HISTORY_FAILED:\n      return getUserHistoryFailed(state, action);\n\n    case actionTypes.UPDATE_PROFILE_START:\n      return updateProfileStart(state, action);\n\n    case actionTypes.UPDATE_PROFILE_SUCCESS:\n      return updateProfileSuccess(state, action);\n\n    case actionTypes.UPDATE_MEMBER_SUCCESS:\n      return updateProfitSuccess(state, action);\n\n    case actionTypes.UPDATE_PROFIT_SUCCESS:\n      return updateMemberSuccess(state, action);\n\n    case actionTypes.UPDATE_PROFILE_FAILED:\n      return updateProfileFailed(state, action);\n\n    case actionTypes.GET_USERS_START:\n      return getUsersStart(state, action);\n\n    case actionTypes.GET_USERS_SUCCESS:\n      return getUsersSuccess(state, action);\n\n    case actionTypes.GET_USERS_FAILED:\n      return getUsersFailed(state, action);\n\n    case actionTypes.WITHDRAW_NOW_START:\n      return withdrawNowStart(state, action);\n\n    case actionTypes.WITHDRAW_NOW_SUCCESS:\n      return withdrawNowSuccess(state, action);\n\n    case actionTypes.WITHDRAW_NOW_APPROVAL_SUCCESS:\n      return withdrawNowApprovalSuccess(state, action);\n\n    case actionTypes.WITHDRAW_NOW_FAILED:\n      return withdrawNowFailed(state, action);\n\n    case actionTypes.INVEST_NOW_START:\n      return investNowStart(state, action);\n\n    case actionTypes.INVEST_NOW_SUCCESS:\n      return investNowSuccess(state, action);\n\n    case actionTypes.INVEST_NOW_APPROVAL_SUCCESS:\n      return investNowApprovalSuccess(state, action);\n\n    case actionTypes.INVEST_NOW_FAILED:\n      return investNowFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default handleUsers;","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/store/reducers/users.js"],"names":["actionTypes","update","initialState","error","loading","usersData","getUsers","investNow","withdrawNow","getUserDepositHistory","getUserWithdrawalHistory","getAdminSuccess","state","action","adminData","data","updateProfileStart","updateProfileSuccess","updateMemberSuccess","updatedMember","updateProfitSuccess","updatedProfit","updateProfileFailed","err","getUserHistoryStart","getUserHistorySuccess","getDepositHistory","getWithdrawalHistory","getUserHistoryFailed","investNowStart","investNowSuccess","investNowApprovalSuccess","investNowFailed","withdrawNowStart","withdrawNowSuccess","withdrawNowApprovalSuccess","withdrawNowFailed","getUsersFailed","getUsersStart","getUsersSuccess","getUser","usersId","getUsersId","handleUsers","type","GET_ADMIN_SUCCESS","USER_HISTORY_START","USER_HISTORY_SUCCESS","USER_HISTORY_FAILED","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","UPDATE_MEMBER_SUCCESS","UPDATE_PROFIT_SUCCESS","UPDATE_PROFILE_FAILED","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAILED","WITHDRAW_NOW_START","WITHDRAW_NOW_SUCCESS","WITHDRAW_NOW_APPROVAL_SUCCESS","WITHDRAW_NOW_FAILED","INVEST_NOW_START","INVEST_NOW_SUCCESS","INVEST_NOW_APPROVAL_SUCCESS","INVEST_NOW_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\r\nimport update from '../utility'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    loading: false,\r\n    usersData: {},\r\n    getUsers: [],\r\n    investNow: [],\r\n    withdrawNow: [],\r\n    getUserDepositHistory: [],\r\n    getUserWithdrawalHistory: []\r\n}\r\n\r\nconst getAdminSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        adminData: action.data\r\n    })\r\n}\r\nconst updateProfileStart = (state, action) => {\r\n    return update(state, {\r\n        loading: true,\r\n    })\r\n}\r\nconst updateProfileSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        getUsers: action.data,\r\n    })\r\n}\r\nconst updateMemberSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        updatedMember: action.data,\r\n    })\r\n}\r\nconst updateProfitSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        updatedProfit: action.data,\r\n    })\r\n}\r\nconst updateProfileFailed = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        error: action.err,\r\n    })\r\n}\r\nconst getUserHistoryStart = (state, action) => {\r\n    return update(state, {\r\n        loading: true,\r\n    })\r\n}\r\nconst getUserHistorySuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        getUserDepositHistory: action.data.getDepositHistory,\r\n        getUserWithdrawalHistory: action.data.getWithdrawalHistory,\r\n    })\r\n}\r\nconst getUserHistoryFailed = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        error: action.err,\r\n    })\r\n}\r\nconst investNowStart = (state, action) => {\r\n    return update(state, {\r\n        loading: true,\r\n    })\r\n}\r\nconst investNowSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        investNow: action.data,\r\n    })\r\n}\r\nconst investNowApprovalSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        investNowApprovalSuccess: true,\r\n    })\r\n}\r\nconst investNowFailed = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        error: action.err,\r\n    })\r\n}\r\nconst withdrawNowStart = (state, action) => {\r\n    return update(state, {\r\n        loading: true,\r\n    })\r\n}\r\nconst withdrawNowSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        withdrawNow: action.data,\r\n    })\r\n}\r\n\r\nconst withdrawNowApprovalSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        withdrawNowApprovalSuccess: true,\r\n    })\r\n}\r\n\r\nconst withdrawNowFailed = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        error: action.err,\r\n    })\r\n}\r\nconst getUsersFailed = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        error: action.err,\r\n    })\r\n}\r\nconst getUsersStart = (state, action) => {\r\n    return update(state, {\r\n        loading: true,\r\n    })\r\n}\r\nconst getUsersSuccess = (state, action) => {\r\n    return update(state, {\r\n        loading: false,\r\n        usersData: action.data.getUser,\r\n        usersId: action.data.getUsersId\r\n    })\r\n}\r\n\r\nconst handleUsers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ADMIN_SUCCESS:\r\n            return getAdminSuccess(state, action)\r\n        case actionTypes.USER_HISTORY_START:\r\n            return getUserHistoryStart(state, action)\r\n        case actionTypes.USER_HISTORY_SUCCESS:\r\n            return getUserHistorySuccess(state, action)\r\n        case actionTypes.USER_HISTORY_FAILED:\r\n            return getUserHistoryFailed(state, action)\r\n        case actionTypes.UPDATE_PROFILE_START:\r\n            return updateProfileStart(state, action)\r\n        case actionTypes.UPDATE_PROFILE_SUCCESS:\r\n            return updateProfileSuccess(state, action)\r\n        case actionTypes.UPDATE_MEMBER_SUCCESS:\r\n            return updateProfitSuccess(state, action)\r\n        case actionTypes.UPDATE_PROFIT_SUCCESS:\r\n            return updateMemberSuccess(state, action)\r\n        case actionTypes.UPDATE_PROFILE_FAILED:\r\n            return updateProfileFailed(state, action)\r\n        case actionTypes.GET_USERS_START:\r\n            return getUsersStart(state, action)\r\n        case actionTypes.GET_USERS_SUCCESS:\r\n            return getUsersSuccess(state, action)\r\n        case actionTypes.GET_USERS_FAILED:\r\n            return getUsersFailed(state, action)\r\n        case actionTypes.WITHDRAW_NOW_START:\r\n            return withdrawNowStart(state, action)\r\n        case actionTypes.WITHDRAW_NOW_SUCCESS:\r\n            return withdrawNowSuccess(state, action)\r\n        case actionTypes.WITHDRAW_NOW_APPROVAL_SUCCESS:\r\n            return withdrawNowApprovalSuccess(state, action)\r\n        case actionTypes.WITHDRAW_NOW_FAILED:\r\n            return withdrawNowFailed(state, action)\r\n        case actionTypes.INVEST_NOW_START:\r\n            return investNowStart(state, action)\r\n        case actionTypes.INVEST_NOW_SUCCESS:\r\n            return investNowSuccess(state, action)\r\n        case actionTypes.INVEST_NOW_APPROVAL_SUCCESS:\r\n            return investNowApprovalSuccess(state, action)\r\n        case actionTypes.INVEST_NOW_FAILED:\r\n            return investNowFailed(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default handleUsers\r\n"]},"metadata":{},"sourceType":"module"}