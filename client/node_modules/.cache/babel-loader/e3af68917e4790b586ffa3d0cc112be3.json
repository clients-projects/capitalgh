{"ast":null,"code":"import _objectSpread from \"/home/niscolinx/projects/fxcrypto/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/niscolinx/projects/fxcrypto/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/main/auth/Signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport Particles from 'react-tsparticles';\nimport * as orderAction from '../../store/actions/burgerIndex';\nimport Input from '../Input';\nimport Button from '../Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nconst Signup = props => {\n  const parsed = queryString.parse(window.location.search);\n\n  const _useState = useState({\n    signupForm: {\n      fullname: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({\n          min: 6\n        })]\n      },\n      username: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({\n          min: 3\n        })]\n      },\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      confirmEmail: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({\n          min: 6\n        })]\n      },\n      confirmPassword: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({\n          min: 6\n        })]\n      },\n      bitcoinAccount: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [length({\n          min: 26\n        })]\n      },\n      ethereumAccount: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [length({\n          min: 40\n        })]\n      },\n      referral: {\n        value: parsed.ref ? parsed.ref : '',\n        valid: false,\n        touched: false,\n        validators: [length({\n          min: 3\n        })]\n      }\n    },\n    formValid: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  useEffect(() => {\n    if (props.err) {\n      setMessage({\n        error: props.err.page === 'signup' ? props.err.error : null\n      });\n    } else if (props.tokenId) {\n      setMessage({\n        success: 'Success'\n      });\n    }\n  }, [props]);\n\n  const inputChangeHandler = (input, value) => {\n    setState(prevState => {\n      let isValid = true;\n\n      for (const validator of prevState.signupForm[input].validators) {\n        const emailValue = prevState.signupForm.email.value;\n        const passwordValue = prevState.signupForm.password.value;\n\n        if (input === 'confirmEmail') {\n          if (emailValue !== value) {\n            isValid = false;\n          } else {\n            isValid = true;\n          }\n        }\n\n        if (input === 'confirmPassword') {\n          if (passwordValue !== value) {\n            isValid = false;\n          } else {\n            isValid = true;\n          }\n        }\n\n        isValid = isValid && validator(value);\n      }\n\n      const updatedForm = _objectSpread({}, prevState.signupForm, {\n        [input]: _objectSpread({}, prevState.signupForm[input], {\n          valid: isValid,\n          value: value,\n          touched: true\n        })\n      });\n\n      let formIsValid = true;\n\n      for (const inputName in updatedForm) {\n        if (inputName !== 'formValid' && inputName !== '[object Object]' && inputName !== 'bitcoinAccount' && inputName !== 'ethereumAccount' && inputName !== 'referral') {\n          formIsValid = formIsValid && updatedForm[inputName].valid;\n        }\n      }\n\n      return {\n        signupForm: updatedForm,\n        formValid: formIsValid\n      };\n    });\n  };\n\n  const inputBlurHandler = input => {};\n\n  const handleSignup = e => {\n    e.preventDefault();\n\n    if (state.formValid) {\n      props.onInitSignup(state);\n    } else {\n      setMessage({\n        error: 'Wrong Input, please check your entries'\n      });\n    }\n  };\n\n  if (props.redirectToLoginPage) {\n    props.history.push(props.redirectToLoginPage);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Particles, {\n    className: \"particles\" // style={{\n    //     background: 'red',\n    //     zIndex: -1,\n    //     width: '100%',\n    //     position: 'absolute',\n    //     // left: 0,\n    //     // top: 0,\n    //     // right: 0,\n    //     // bottom: 0,\n    // }}\n    ,\n    params: {\n      particles: {\n        number: {\n          value: 70\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Auth, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSignup,\n    className: \"form__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 form__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"Personal Information\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"fullname\",\n    label: \"Fullname\",\n    type: \"text\",\n    control: \"input\",\n    minLength: 6,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('fullname'),\n    value: state.signupForm['fullname'].value,\n    valid: state.signupForm['fullname'].valid,\n    touched: state.signupForm['fullname'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"username\",\n    label: \"Username\",\n    type: \"text\",\n    control: \"input\",\n    minLength: 3,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('username'),\n    value: state.signupForm['username'].value,\n    valid: state.signupForm['username'].valid,\n    touched: state.signupForm['username'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    label: \"E-Mail\",\n    type: \"email\",\n    control: \"input\",\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('email'),\n    value: state.signupForm['email'].value,\n    valid: state.signupForm['email'].valid,\n    touched: state.signupForm['email'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"confirmEmail\",\n    label: \"Confirm E-Mail\",\n    type: \"email\",\n    control: \"input\",\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('confirmEmail'),\n    value: state.signupForm['confirmEmail'].value,\n    valid: state.signupForm['confirmEmail'].valid,\n    touched: state.signupForm['confirmEmail'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 form__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"Account Information\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    control: \"input\",\n    minLength: 6,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('password'),\n    value: state.signupForm['password'].value,\n    valid: state.signupForm['password'].valid,\n    touched: state.signupForm['password'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"confirmPassword\",\n    label: \"confirm Password\",\n    type: \"password\",\n    control: \"input\",\n    minLength: 6,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('confirmPassword'),\n    value: state.signupForm['confirmPassword'].value,\n    valid: state.signupForm['confirmPassword'].valid,\n    touched: state.signupForm['confirmPassword'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"referral\",\n    label: \"Referral\",\n    type: \"text\",\n    control: \"input\",\n    placeholder: \"optional\",\n    minLength: 3,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('referral'),\n    value: state.signupForm['referral'].value,\n    valid: state.signupForm['referral'].valid,\n    touched: state.signupForm['referral'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"heading-3 form__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"Currency Information\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"bitcoinAccount\",\n    label: \"Bitcoin Account\",\n    type: \"text\",\n    control: \"input\",\n    minLength: 26,\n    placeholder: \"optional\",\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('bitcoinAccount'),\n    value: state.signupForm['bitcoinAccount'].value,\n    valid: state.signupForm['bitcoinAccount'].valid,\n    touched: state.signupForm['bitcoinAccount'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"ethereumAccount\",\n    label: \"Ethereum Account\",\n    type: \"ethereumAccount\",\n    control: \"input\",\n    placeholder: \"optional\",\n    minLength: 40,\n    onChange: inputChangeHandler,\n    onBlur: inputBlurHandler.bind('ethereumAccount'),\n    value: state.signupForm['ethereumAccount'].value,\n    valid: state.signupForm['ethereumAccount'].valid,\n    touched: state.signupForm['ethereumAccount'].touched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    required: \"true\",\n    value: \"\",\n    id: \"signupCheckbox\",\n    label: \"checkbox\",\n    type: \"checkbox\",\n    control: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    design: \"raised\",\n    type: \"submit\",\n    loading: props.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, props.loading ? 'Loading...' : 'Signup')))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    err: state.auth.error,\n    loading: state.auth.loading,\n    redirectToLoginPage: state.auth.redirect,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitSignup: state => dispatch(orderAction.initSignup(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/main/auth/Signup.js"],"names":["React","useState","useEffect","connect","queryString","Particles","orderAction","Input","Button","required","length","email","Auth","Signup","props","parsed","parse","window","location","search","signupForm","fullname","value","valid","touched","validators","min","username","confirmEmail","password","confirmPassword","bitcoinAccount","ethereumAccount","referral","ref","formValid","state","setState","message","setMessage","err","error","page","tokenId","success","inputChangeHandler","input","prevState","isValid","validator","emailValue","passwordValue","updatedForm","formIsValid","inputName","inputBlurHandler","handleSignup","e","preventDefault","onInitSignup","redirectToLoginPage","history","push","particles","number","bind","loading","mapStateToProps","auth","redirect","userId","mapDispatchToProps","dispatch","initSignup"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport Particles from 'react-tsparticles'\n\nimport * as orderAction from '../../store/actions/burgerIndex'\nimport Input from '../Input'\nimport Button from '../Button'\nimport { required, length, email } from '../../util/validators'\nimport Auth from './Auth'\n\nconst Signup = (props) => {\n    const parsed = queryString.parse(window.location.search)\n\n    const [state, setState] = useState({\n        signupForm: {\n            fullname: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            username: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 3 })],\n            },\n            email: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email],\n            },\n            confirmEmail: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email],\n            },\n            password: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            confirmPassword: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            bitcoinAccount: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [length({ min: 26 })],\n            },\n            ethereumAccount: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [length({ min: 40 })],\n            },\n            referral: {\n                value: parsed.ref ? parsed.ref : '',\n                valid: false,\n                touched: false,\n                validators: [length({ min: 3 })],\n            },\n        },\n        formValid: false,\n    })\n\n    const [message, setMessage] = useState(null)\n\n    useEffect(() => {\n        if (props.err) {\n            setMessage({\n                error: props.err.page === 'signup' ? props.err.error : null,\n            })\n        } else if (props.tokenId) {\n            setMessage({\n                success: 'Success',\n            })\n        }\n    }, [props])\n\n    const inputChangeHandler = (input, value) => {\n        setState((prevState) => {\n            let isValid = true\n            for (const validator of prevState.signupForm[input].validators) {\n                const emailValue = prevState.signupForm.email.value\n                const passwordValue = prevState.signupForm.password.value\n\n                if (input === 'confirmEmail') {\n                    if (emailValue !== value) {\n                        isValid = false\n                    } else {\n                        isValid = true\n                    }\n                }\n                if (input === 'confirmPassword') {\n                    if (passwordValue !== value) {\n                        isValid = false\n                    } else {\n                        isValid = true\n                    }\n                }\n\n                isValid = isValid && validator(value)\n            }\n            const updatedForm = {\n                ...prevState.signupForm,\n                [input]: {\n                    ...prevState.signupForm[input],\n                    valid: isValid,\n                    value: value,\n                    touched: true,\n                },\n            }\n            let formIsValid = true\n            for (const inputName in updatedForm) {\n                if (\n                    inputName !== 'formValid' &&\n                    inputName !== '[object Object]' &&\n                    inputName !== 'bitcoinAccount' &&\n                    inputName !== 'ethereumAccount' &&\n                    inputName !== 'referral'\n                ) {\n                    formIsValid = formIsValid && updatedForm[inputName].valid\n                }\n            }\n            return {\n                signupForm: updatedForm,\n                formValid: formIsValid,\n            }\n        })\n    }\n\n    const inputBlurHandler = (input) => {}\n\n    const handleSignup = (e) => {\n        e.preventDefault()\n        if (state.formValid) {\n            props.onInitSignup(state)\n        } else {\n            setMessage({ error: 'Wrong Input, please check your entries' })\n        }\n    }\n\n    if (props.redirectToLoginPage) {\n        props.history.push(props.redirectToLoginPage)\n    }\n\n    return (\n        <>\n            <Particles\n                className='particles'\n                // style={{\n                //     background: 'red',\n                //     zIndex: -1,\n                //     width: '100%',\n                //     position: 'absolute',\n                //     // left: 0,\n                //     // top: 0,\n                //     // right: 0,\n                //     // bottom: 0,\n                // }}\n                params={{\n                    particles: {\n                        number: {\n                            value: 70,\n                        },\n                    },\n                }}\n            />\n            <Auth message={message}>\n                <form onSubmit={handleSignup} className='form__box'>\n                    <div className='form-1'>\n                        <h3 className='heading-3 form__heading'>\n                            Personal Information\n                        </h3>\n                        <Input\n                            id='fullname'\n                            label='Fullname'\n                            type='text'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('fullname')}\n                            value={state.signupForm['fullname'].value}\n                            valid={state.signupForm['fullname'].valid}\n                            touched={state.signupForm['fullname'].touched}\n                        />\n                        <Input\n                            id='username'\n                            label='Username'\n                            type='text'\n                            control='input'\n                            minLength={3}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('username')}\n                            value={state.signupForm['username'].value}\n                            valid={state.signupForm['username'].valid}\n                            touched={state.signupForm['username'].touched}\n                        />\n\n                        <Input\n                            id='email'\n                            label='E-Mail'\n                            type='email'\n                            control='input'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('email')}\n                            value={state.signupForm['email'].value}\n                            valid={state.signupForm['email'].valid}\n                            touched={state.signupForm['email'].touched}\n                        />\n                        <Input\n                            id='confirmEmail'\n                            label='Confirm E-Mail'\n                            type='email'\n                            control='input'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('confirmEmail')}\n                            value={state.signupForm['confirmEmail'].value}\n                            valid={state.signupForm['confirmEmail'].valid}\n                            touched={state.signupForm['confirmEmail'].touched}\n                        />\n                    </div>\n                    <div className='form-2'>\n                        <h3 className='heading-3 form__heading'>\n                            Account Information\n                        </h3>\n\n                        <Input\n                            id='password'\n                            label='Password'\n                            type='password'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('password')}\n                            value={state.signupForm['password'].value}\n                            valid={state.signupForm['password'].valid}\n                            touched={state.signupForm['password'].touched}\n                        />\n                        <Input\n                            id='confirmPassword'\n                            label='confirm Password'\n                            type='password'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('confirmPassword')}\n                            value={state.signupForm['confirmPassword'].value}\n                            valid={state.signupForm['confirmPassword'].valid}\n                            touched={\n                                state.signupForm['confirmPassword'].touched\n                            }\n                        />\n                        <Input\n                            id='referral'\n                            label='Referral'\n                            type='text'\n                            control='input'\n                            placeholder='optional'\n                            minLength={3}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('referral')}\n                            value={state.signupForm['referral'].value}\n                            valid={state.signupForm['referral'].valid}\n                            touched={state.signupForm['referral'].touched}\n                        />\n                    </div>\n                    <div className='form-3'>\n                        <h3 className='heading-3 form__heading'>\n                            Currency Information\n                        </h3>\n\n                        <Input\n                            id='bitcoinAccount'\n                            label='Bitcoin Account'\n                            type='text'\n                            control='input'\n                            minLength={26}\n                            placeholder='optional'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('bitcoinAccount')}\n                            value={state.signupForm['bitcoinAccount'].value}\n                            valid={state.signupForm['bitcoinAccount'].valid}\n                            touched={state.signupForm['bitcoinAccount'].touched}\n                        />\n                        <Input\n                            id='ethereumAccount'\n                            label='Ethereum Account'\n                            type='ethereumAccount'\n                            control='input'\n                            placeholder='optional'\n                            minLength={40}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('ethereumAccount')}\n                            value={state.signupForm['ethereumAccount'].value}\n                            valid={state.signupForm['ethereumAccount'].valid}\n                            touched={\n                                state.signupForm['ethereumAccount'].touched\n                            }\n                        />\n                    </div>\n\n                    <div className='form-btn'>\n                        <Input\n                            required='true'\n                            value=''\n                            id='signupCheckbox'\n                            label='checkbox'\n                            type='checkbox'\n                            control='checkbox'\n                        />\n                        <Button\n                            design='raised'\n                            type='submit'\n                            loading={props.loading}\n                        >\n                            {props.loading ? 'Loading...' : 'Signup'}\n                        </Button>\n                    </div>\n                </form>\n            </Auth>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        err: state.auth.error,\n        loading: state.auth.loading,\n        redirectToLoginPage: state.auth.redirect,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitSignup: (state) => dispatch(orderAction.initSignup(state)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\n"]},"metadata":{},"sourceType":"module"}