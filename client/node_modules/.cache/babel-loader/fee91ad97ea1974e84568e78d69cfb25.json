{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/DepositHistory.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Row, Col, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/burgerIndex';\nimport Card from '../../components/Card/Card'; //import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thDepositHistoryArray = ['No', 'Username', 'Amount', 'Plan', 'Date'];\n\nconst AllUsersDepositHistory = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allUsersDeposit = _useState2[0],\n        setAllUsersDeposit = _useState2[1];\n\n  const gottenAllUsersDeposit = useRef();\n  useEffect(() => {\n    if (!gottenAllUsersDeposit.current) {\n      if (props.tokenId) {\n        props.onInitGetFunds(props.tokenId);\n      }\n\n      gottenAllUsersDeposit.current = true;\n    } else {\n      if (props.allUsersDeposit) {\n        setAllUsersDeposit(props.allUsersDeposit);\n      }\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    title: \"Users Deposits\",\n    category: \"Deposit History of all the users\",\n    ctTableFullWidth: true,\n    ctTableResponsive: true,\n    content: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, thDepositHistoryArray.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 57\n        }\n      }, prop);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, allUsersDeposit.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 49\n        }\n      }, Object.values(prop).map(prop => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 65\n          }\n        }, prop);\n      }));\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    allUsersDeposit: state.fundAccount.allUsersDeposit\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetFunds: token => dispatch(actions.initGetFunds(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllUsersDepositHistory);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/DepositHistory.jsx"],"names":["React","useState","useEffect","useRef","Grid","Row","Col","Table","connect","actions","Card","thDepositHistoryArray","AllUsersDepositHistory","props","allUsersDeposit","setAllUsersDeposit","gottenAllUsersDeposit","current","tokenId","onInitGetFunds","map","prop","key","Object","values","mapStateToProps","state","auth","userId","fundAccount","mapDispatchToProps","dispatch","token","initGetFunds"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Grid, Row, Col, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../store/actions/burgerIndex'\n\nimport Card from '../../components/Card/Card'\n//import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thDepositHistoryArray = [\n    'No',\n    'Username',\n    'Amount',\n    'Plan',\n    'Date'\n]\n\n\n\n\nconst AllUsersDepositHistory = (props) => {\n    const [allUsersDeposit, setAllUsersDeposit] = useState([])\n\n    const gottenAllUsersDeposit = useRef()\n    useEffect(() => {\n        if (!gottenAllUsersDeposit.current) {\n            if (props.tokenId) {\n                props.onInitGetFunds(props.tokenId)\n            }\n            gottenAllUsersDeposit.current = true\n        } else {\n            if (props.allUsersDeposit) {\n                setAllUsersDeposit(props.allUsersDeposit)\n            }\n        }\n    }, [props])\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card\n                            plain\n                            title='Users Deposits'\n                            category='Deposit History of all the users'\n                            ctTableFullWidth\n                            ctTableResponsive\n                            content={\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            {thDepositHistoryArray.map(\n                                                (prop, key) => {\n                                                    return (\n                                                        <th key={key}>\n                                                            {prop}\n                                                        </th>\n                                                    )\n                                                }\n                                            )}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {allUsersDeposit.map((prop, key) => {\n                                            return (\n                                                <tr key={key}>\n                                                    {Object.values(prop).map(\n                                                        (prop) => {\n                                                            return (\n                                                                <td key={key}>\n                                                                    {prop}\n                                                                </td>\n                                                            )\n                                                        }\n                                                    )}\n\n                                                    {/* <button className='btn1'>\n                                                        view\n                                                    </button> */}\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        allUsersDeposit: state.fundAccount.allUsersDeposit,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetFunds: (token) => dispatch(actions.initGetFunds(token)),\n    }\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AllUsersDepositHistory)\n"]},"metadata":{},"sourceType":"module"}