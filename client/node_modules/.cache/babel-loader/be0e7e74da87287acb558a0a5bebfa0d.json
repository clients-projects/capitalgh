{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/main/Input.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst input = props => {\n  const formLink = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form__linkText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"I agree with the\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/terms\",\n    className: \"form__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Terms and Conditions\")));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.label && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, props.label !== 'checkbox' ? props.label : null), props.control === 'input' && /*#__PURE__*/React.createElement(\"input\", {\n    className: ['form__input', !props.valid && props.touched ? 'invalid' : 'valid'].join(' '),\n    minLength: props.minLength,\n    type: props.type,\n    id: props.id,\n    required: props.required,\n    value: props.value,\n    placeholder: props.placeholder,\n    onChange: e => props.onChange(props.id, e.target.value, e.target.files),\n    onBlur: props.onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), props.control === 'textarea' && /*#__PURE__*/React.createElement(\"textarea\", {\n    className: ['form__textarea', !props.valid && props.touched ? 'invalid' : 'valid'].join(' '),\n    id: props.id,\n    rows: props.rows,\n    required: props.required,\n    value: props.value,\n    onChange: e => props.onChange(props.id, e.target.value),\n    onBlur: props.onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), props.label && props.control === 'checkbox' && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form__checkboxLabel\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: props.required,\n    className: 'form__checkbox',\n    id: props.id,\n    type: props.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), props.label === 'checkbox' ? formLink : null)));\n};\n\nexport default input;","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/main/Input.js"],"names":["React","Link","input","props","formLink","label","id","control","valid","touched","join","minLength","type","required","value","placeholder","e","onChange","target","files","onBlur","rows"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst input = (props) => {\r\n\r\n\r\n    const formLink = (\r\n        <>\r\n            <p className='form__linkText'>\r\n                I agree with the{' '}\r\n                <Link to='/terms' className='form__link'>\r\n                    Terms and Conditions\r\n                </Link>\r\n            </p>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                {props.label && (\r\n                    <label className='form__label' htmlFor={props.id}>\r\n                        {props.label !== 'checkbox' ? props.label : null}\r\n                    </label>\r\n                )}\r\n                {props.control === 'input' && (\r\n                    <input\r\n                        className={[\r\n                            'form__input',\r\n                            !props.valid && props.touched ? 'invalid' : 'valid',\r\n                        ].join(' ')}\r\n                        minLength={props.minLength}\r\n                        type={props.type}\r\n                        id={props.id}\r\n                        required={props.required}\r\n                        value={props.value}\r\n                        placeholder={props.placeholder}\r\n                        onChange={(e) =>\r\n                            props.onChange(\r\n                                props.id,\r\n                                e.target.value,\r\n                                e.target.files\r\n                            )\r\n                        }\r\n                        onBlur={props.onBlur}\r\n                    />\r\n                )}\r\n                {props.control === 'textarea' && (\r\n                    <textarea\r\n                        className={[\r\n                            'form__textarea',\r\n                            !props.valid && props.touched ? 'invalid' : 'valid',\r\n                        ].join(' ')}\r\n                        id={props.id}\r\n                        rows={props.rows}\r\n                        required={props.required}\r\n                        value={props.value}\r\n                        onChange={(e) =>\r\n                            props.onChange(props.id, e.target.value)\r\n                        }\r\n                        onBlur={props.onBlur}\r\n                    />\r\n                )}\r\n\r\n                {props.label && props.control === 'checkbox' && (\r\n                    <label className='form__checkboxLabel' htmlFor={props.id}>\r\n                        <input\r\n                            required={props.required}\r\n                            className={'form__checkbox'}\r\n                            id={props.id}\r\n                            type={props.type}\r\n                          \r\n                        />\r\n                        {props.label === 'checkbox' ? formLink : null}\r\n                    </label>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default input\r\n"]},"metadata":{},"sourceType":"module"}