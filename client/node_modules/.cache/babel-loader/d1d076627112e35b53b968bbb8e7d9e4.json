{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcrypto/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/Members.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Row, Col, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as orderAction from '../../store/actions/burgerIndex';\nimport Card from '../../components/Card/Card'; //import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thWithdrawalArray = ['No', 'Username', 'Email', 'Status', 'Date'];\n\nconst Members = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allUsers = _useState2[0],\n        setAllUsers = _useState2[1];\n\n  const gottenAllUsers = useRef();\n  useEffect(() => {\n    if (!gottenAllUsers.current) {\n      if (props.tokenId) {\n        props.onInitGetUsers(props.tokenId);\n      }\n\n      gottenAllUsers.current = true;\n    } else {\n      if (props.getUsers) {\n        setAllUsers(props.getUsers);\n      }\n    }\n  }, [props]);\n\n  const handleApproval = id => {\n    for (let i = 0; i < props.getUsersId.length; i++) {\n      if (id === i) {\n        props.history.push('/admin/member?id=' + props.getUsersId[i]._id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    title: \"Members\",\n    category: \"\",\n    ctTableFullWidth: true,\n    ctTableResponsive: true,\n    content: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }\n    }, thWithdrawalArray.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 57\n        }\n      }, prop);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, allUsers.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        className: \"clientCard__tbody--tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }, Object.values(prop).map((prop, key) => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 65\n          }\n        }, prop);\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn1\",\n        onClick: () => handleApproval(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }, props.loading ? 'Loading...' : 'View'));\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.user.loading,\n    err: state.auth.error,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    getUsers: state.user.getUsers.getUser,\n    getUsersId: state.user.getUsers.getUsersId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetUsers: token => dispatch(orderAction.initGetUsers(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Members);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/Members.jsx"],"names":["React","useState","useEffect","useRef","Grid","Row","Col","Table","connect","orderAction","Card","thWithdrawalArray","Members","props","allUsers","setAllUsers","gottenAllUsers","current","tokenId","onInitGetUsers","getUsers","handleApproval","id","i","getUsersId","length","history","push","_id","map","prop","key","Object","values","loading","mapStateToProps","state","user","err","auth","error","userId","getUser","mapDispatchToProps","dispatch","token","initGetUsers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Grid, Row, Col, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport * as orderAction from '../../store/actions/burgerIndex'\n\nimport Card from '../../components/Card/Card'\n//import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thWithdrawalArray = ['No','Username', 'Email', 'Status', 'Date']\n\nconst Members = (props) => {\n    const [allUsers, setAllUsers] = useState([])\n\n    const gottenAllUsers = useRef()\n    useEffect(() => {\n        if (!gottenAllUsers.current) {\n            if (props.tokenId) {\n                props.onInitGetUsers(props.tokenId)\n            }\n            gottenAllUsers.current = true\n        } else {\n            if (props.getUsers) {\n                setAllUsers(props.getUsers)\n            }\n        }\n    }, [props])\n\n    const handleApproval = (id) => {\n        for (let i = 0; i < props.getUsersId.length; i++) {\n            if (id === i) {\n                props.history.push(\n                    '/admin/member?id=' + props.getUsersId[i]._id\n                )\n            }\n        }\n    }\n\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card\n                            plain\n                            title='Members'\n                            category=''\n                            ctTableFullWidth\n                            ctTableResponsive\n                            content={\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            {thWithdrawalArray.map(\n                                                (prop, key) => {\n                                                    return (\n                                                        <th key={key}>\n                                                            {prop}\n                                                        </th>\n                                                    )\n                                                }\n                                            )}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {allUsers.map((prop, key) => {\n                                            return (\n                                                <tr\n                                                    key={key}\n                                                    className='clientCard__tbody--tr'\n                                                >\n                                                    {Object.values(prop).map(\n                                                        (prop, key) => {\n                                                            return (\n                                                                <td\n                                                                    key={key}\n                                                                    align='center'\n                                                                >\n                                                                    {prop}\n                                                                </td>\n                                                            )\n                                                        }\n                                                    )}\n                                                    <button\n                                                        className='btn1'\n                                                        onClick={() =>\n                                                            handleApproval(key)\n                                                        }\n                                                    >\n                                                        {props.loading\n                                                            ? 'Loading...'\n                                                            : 'View'}\n                                                    </button>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.user.loading,\n        err: state.auth.error,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        getUsers: state.user.getUsers.getUser,\n        getUsersId: state.user.getUsers.getUsersId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetUsers: (token) => dispatch(orderAction.initGetUsers(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Members)\n"]},"metadata":{},"sourceType":"module"}