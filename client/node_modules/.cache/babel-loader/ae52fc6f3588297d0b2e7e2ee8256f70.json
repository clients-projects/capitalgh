{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/views/WithdrawalHistory.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Row, Col, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as orderAction from '../store/actions/burgerIndex';\nimport Card from '../components/Card/Card'; //import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thInvestmentHistoryArray = ['No', 'amount', 'Currency', 'Date'];\n\nconst Members = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        getWithdrawalHistory = _useState2[0],\n        setWithdrawalHistory = _useState2[1];\n\n  const gottenWithdrawalHistory = useRef();\n  useEffect(() => {\n    if (!gottenWithdrawalHistory.current) {\n      if (props.tokenId) {\n        props.onInitGetUserHistory(props.tokenId);\n      }\n\n      gottenWithdrawalHistory.current = true;\n    } else {\n      if (props.getUserWithdrawalHistory) {\n        setWithdrawalHistory(props.getUserWithdrawalHistory);\n      }\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    title: \"Your Investment\",\n    category: \"History\",\n    ctTableFullWidth: true,\n    ctTableResponsive: true,\n    content: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, thInvestmentHistoryArray.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 57\n        }\n      }, prop);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, getWithdrawalHistory.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 53\n        }\n      }, Object.values(prop).map((prop, key) => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 65\n          }\n        }, prop);\n      }));\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.user.loading,\n    err: state.auth.error,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    getUserWithdrawalHistory: state.user.getUserWithdrawalHistory\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetUserHistory: token => dispatch(orderAction.initGetUserHistory(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Members);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/views/WithdrawalHistory.jsx"],"names":["React","useState","useEffect","useRef","Grid","Row","Col","Table","connect","orderAction","Card","thInvestmentHistoryArray","Members","props","getWithdrawalHistory","setWithdrawalHistory","gottenWithdrawalHistory","current","tokenId","onInitGetUserHistory","getUserWithdrawalHistory","map","prop","key","Object","values","mapStateToProps","state","loading","user","err","auth","error","userId","mapDispatchToProps","dispatch","token","initGetUserHistory"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,iBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;AAEA,OAAOC,IAAP,MAAiB,yBAAjB,C,CACA;;AAEA,MAAMC,wBAAwB,GAAG,CAC7B,IAD6B,EAE7B,QAF6B,EAG7B,UAH6B,EAI7B,MAJ6B,CAAjC;;AAOA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBAC8BZ,QAAQ,CAAC,EAAD,CADtC;AAAA;AAAA,QAChBa,oBADgB;AAAA,QACMC,oBADN;;AAGvB,QAAMC,uBAAuB,GAAGb,MAAM,EAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACc,uBAAuB,CAACC,OAA7B,EAAsC;AAClC,UAAIJ,KAAK,CAACK,OAAV,EAAmB;AACfL,QAAAA,KAAK,CAACM,oBAAN,CAA2BN,KAAK,CAACK,OAAjC;AACH;;AACDF,MAAAA,uBAAuB,CAACC,OAAxB,GAAkC,IAAlC;AACH,KALD,MAKO;AACH,UAAIJ,KAAK,CAACO,wBAAV,EAAoC;AAChCL,QAAAA,oBAAoB,CAACF,KAAK,CAACO,wBAAP,CAApB;AACH;AACJ;AACJ,GAXQ,EAWN,CAACP,KAAD,CAXM,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,KAAK,EAAC,iBAFV;AAGI,IAAA,QAAQ,EAAC,SAHb;AAII,IAAA,gBAAgB,MAJpB;AAKI,IAAA,iBAAiB,MALrB;AAMI,IAAA,OAAO,eACH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,wBAAwB,CAACU,GAAzB,CACG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACX,0BACI;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IADL,CADJ;AAKH,KAPJ,CADL,CADJ,CADJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,oBAAoB,CAACO,GAArB,CACG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACX,0BACI;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACC,MAAP,CACGH,IADH,EAECD,GAFD,CAEK,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjB,4BACI;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IADL,CADJ;AAKH,OARA,CADL,CADJ;AAaH,KAfJ,CADL,CAdJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,CADJ;AAqDH,CAtED;;AAwEA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD,OADjB;AAEHE,IAAAA,GAAG,EAAEH,KAAK,CAACI,IAAN,CAAWC,KAFb;AAGHd,IAAAA,OAAO,EAAES,KAAK,CAACI,IAAN,CAAWb,OAHjB;AAIHe,IAAAA,MAAM,EAAEN,KAAK,CAACI,IAAN,CAAWE,MAJhB;AAKHb,IAAAA,wBAAwB,EAAEO,KAAK,CAACE,IAAN,CAAWT;AALlC,GAAP;AAOH,CARD;;AAUA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,oBAAoB,EAAGiB,KAAD,IAClBD,QAAQ,CAAC1B,WAAW,CAAC4B,kBAAZ,CAA+BD,KAA/B,CAAD;AAFT,GAAP;AAIH,CALD;;AAMA,eAAe5B,OAAO,CAACkB,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Grid, Row, Col, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport * as orderAction from '../store/actions/burgerIndex'\n\nimport Card from '../components/Card/Card'\n//import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thInvestmentHistoryArray = [\n    'No',\n    'amount',\n    'Currency',\n    'Date',\n]\n\nconst Members = (props) => {\n    const [getWithdrawalHistory, setWithdrawalHistory] = useState([])\n\n    const gottenWithdrawalHistory = useRef()\n    useEffect(() => {\n        if (!gottenWithdrawalHistory.current) {\n            if (props.tokenId) {\n                props.onInitGetUserHistory(props.tokenId)\n            }\n            gottenWithdrawalHistory.current = true\n        } else {\n            if (props.getUserWithdrawalHistory) {\n                setWithdrawalHistory(props.getUserWithdrawalHistory)\n            }\n        }\n    }, [props])\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card\n                            plain\n                            title='Your Investment'\n                            category='History'\n                            ctTableFullWidth\n                            ctTableResponsive\n                            content={\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            {thInvestmentHistoryArray.map(\n                                                (prop, key) => {\n                                                    return (\n                                                        <th key={key}>\n                                                            {prop}\n                                                        </th>\n                                                    )\n                                                }\n                                            )}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {getWithdrawalHistory.map(\n                                            (prop, key) => {\n                                                return (\n                                                    <tr key={key}>\n                                                        {Object.values(\n                                                            prop\n                                                        ).map((prop, key) => {\n                                                            return (\n                                                                <td key={key}>\n                                                                    {prop}\n                                                                </td>\n                                                            )\n                                                        })}\n                                                    </tr>\n                                                )\n                                            }\n                                        )}\n                                    </tbody>\n                                </Table>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.user.loading,\n        err: state.auth.error,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        getUserWithdrawalHistory: state.user.getUserWithdrawalHistory,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetUserHistory: (token) =>\n            dispatch(orderAction.initGetUserHistory(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Members)\n"]},"metadata":{},"sourceType":"module"}