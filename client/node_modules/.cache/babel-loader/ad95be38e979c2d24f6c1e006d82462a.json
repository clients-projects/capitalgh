{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/WithdrawalHistory.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Row, Col, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/burgerIndex';\nimport Card from '../../components/Card/Card'; //import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thWithdrawalHistoryArray = ['No', 'Username', 'Amount', 'Currency', 'Date'];\n\nconst AllUsersWithdrawalHistory = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allUsersWithdrawal = _useState2[0],\n        setAllUsersWithdrawal = _useState2[1];\n\n  const gottenAllUsersWithdrawal = useRef();\n  useEffect(() => {\n    if (!gottenAllUsersWithdrawal.current) {\n      if (props.tokenId) {\n        props.onInitGetFunds(props.tokenId);\n      }\n\n      gottenAllUsersWithdrawal.current = true;\n    } else {\n      if (props.allUsersWithdrawal) {\n        setAllUsersWithdrawal(props.allUsersWithdrawal);\n      }\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    title: \"Users Withdrawals\",\n    category: \"Withdrawal History of all the users\",\n    ctTableFullWidth: true,\n    ctTableResponsive: true,\n    content: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, thWithdrawalHistoryArray.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 57\n        }\n      }, prop);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, allUsersWithdrawal.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 53\n        }\n      }, Object.values(prop).map(prop => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 65\n          }\n        }, prop);\n      }));\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    allUsersWithdrawal: state.fundAccount.allUsersWithdrawal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetFunds: token => dispatch(actions.initGetFunds(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllUsersWithdrawalHistory);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/WithdrawalHistory.jsx"],"names":["React","useState","useEffect","useRef","Grid","Row","Col","Table","connect","actions","Card","thWithdrawalHistoryArray","AllUsersWithdrawalHistory","props","allUsersWithdrawal","setAllUsersWithdrawal","gottenAllUsersWithdrawal","current","tokenId","onInitGetFunds","map","prop","key","Object","values","mapStateToProps","state","auth","userId","fundAccount","mapDispatchToProps","dispatch","token","initGetFunds"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Grid, Row, Col, Table } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../store/actions/burgerIndex'\n\nimport Card from '../../components/Card/Card'\n//import { thWithdrawalArray, tdWithdrawalArray } from '../../variables/Variables'\n\nconst thWithdrawalHistoryArray = [\n    'No',\n    'Username',\n    'Amount',\n    'Currency',\n    'Date',\n]\n\nconst AllUsersWithdrawalHistory = (props) => {\n    const [allUsersWithdrawal, setAllUsersWithdrawal] = useState([])\n\n    const gottenAllUsersWithdrawal = useRef()\n    useEffect(() => {\n        if (!gottenAllUsersWithdrawal.current) {\n            if (props.tokenId) {\n                props.onInitGetFunds(props.tokenId)\n            }\n            gottenAllUsersWithdrawal.current = true\n        } else {\n            if (props.allUsersWithdrawal) {\n                setAllUsersWithdrawal(props.allUsersWithdrawal)\n            }\n        }\n    }, [props])\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card\n                            plain\n                            title='Users Withdrawals'\n                            category='Withdrawal History of all the users'\n                            ctTableFullWidth\n                            ctTableResponsive\n                            content={\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            {thWithdrawalHistoryArray.map(\n                                                (prop, key) => {\n                                                    return (\n                                                        <th key={key}>\n                                                            {prop}\n                                                        </th>\n                                                    )\n                                                }\n                                            )}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {allUsersWithdrawal.map(\n                                            (prop, key) => {\n                                                return (\n                                                    <tr key={key}>\n                                                        {Object.values(\n                                                            prop\n                                                        ).map((prop) => {\n                                                            return (\n                                                                <td key={key}>\n                                                                    {prop}\n                                                                </td>\n                                                            )\n                                                        })}\n                                                       \n                                                        {/* <button className='btn1'>\n                                                        view\n                                                    </button> */}\n                                                    </tr>\n                                                )\n                                            }\n                                        )}\n                                    </tbody>\n                                </Table>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        allUsersWithdrawal: state.fundAccount.allUsersWithdrawal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetFunds: (token) => dispatch(actions.initGetFunds(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AllUsersWithdrawalHistory)\n"]},"metadata":{},"sourceType":"module"}