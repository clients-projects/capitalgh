{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport update from '../utility';\nconst initialState = {\n  error: null,\n  loading: false,\n  fundedAccount: [],\n  idsOfFunds: [],\n  getAllFundsAccount: [],\n  pendingDeposit: [],\n  idsOfPendingDeposits: [],\n  pendingWithdrawal: [],\n  idsOfPendingWithdrawals: [],\n  idsOfAllUsersDeposit: [],\n  idsOfAllUsersWithdrawal: [],\n  allUsersDeposit: [],\n  allUsersWithdrawal: [],\n  fundAccountApprovalSuccess: false\n};\n\nconst fundAccountStart = (state, action) => {\n  return update(state, {\n    loading: true\n  });\n};\n\nconst fundAccountSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    fundedAccount: action.data.fundData,\n    idsOfFunds: action.data.getFund,\n    idsOfPendingDeposits: action.data.getPendingDeposit,\n    idsOfPendingWithdrawals: action.data.getPendingWithdrawal,\n    idsOfAllUsersDeposit: action.data.getAllUsersDeposit,\n    idsOfAllUsersWithdrawal: action.data.getAllUsersWithdrawal,\n    pendingDeposit: action.data.thePendingDeposit,\n    pendingWithdrawal: action.data.thePendingWithdrawal,\n    allUsersDeposit: action.data.theAllUsersDeposit,\n    allUsersWithdrawal: action.data.theAllUsersWithdrawal\n  });\n};\n\nconst getFundAccountSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    getAllFundsAccount: action.data\n  });\n};\n\nconst fundAccountFailed = (state, action) => {\n  return update(state, {\n    loading: false,\n    error: action.err\n  });\n};\n\nconst fundAccountApprovalSuccess = (state, action) => {\n  return update(state, {\n    loading: false,\n    fundAccountApprovalSuccess: true\n  });\n};\n\nconst fundAccount = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FUND_ACCOUNT_START:\n      return fundAccountStart(state, action);\n\n    case actionTypes.FUND_ACCOUNT_SUCCESS:\n      return fundAccountSuccess(state, action);\n\n    case actionTypes.GET_FUND_ACCOUNT_SUCCESS:\n      return getFundAccountSuccess(state, action);\n\n    case actionTypes.FUND_ACCOUNT_FAILED:\n      return fundAccountFailed(state, action);\n\n    case actionTypes.FUND_ACCOUNT_APPROVAL_SUCCESS:\n      return fundAccountApprovalSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default fundAccount;","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/store/reducers/fundAccount.js"],"names":["actionTypes","update","initialState","error","loading","fundedAccount","idsOfFunds","getAllFundsAccount","pendingDeposit","idsOfPendingDeposits","pendingWithdrawal","idsOfPendingWithdrawals","idsOfAllUsersDeposit","idsOfAllUsersWithdrawal","allUsersDeposit","allUsersWithdrawal","fundAccountApprovalSuccess","fundAccountStart","state","action","fundAccountSuccess","data","fundData","getFund","getPendingDeposit","getPendingWithdrawal","getAllUsersDeposit","getAllUsersWithdrawal","thePendingDeposit","thePendingWithdrawal","theAllUsersDeposit","theAllUsersWithdrawal","getFundAccountSuccess","fundAccountFailed","err","fundAccount","type","FUND_ACCOUNT_START","FUND_ACCOUNT_SUCCESS","GET_FUND_ACCOUNT_SUCCESS","FUND_ACCOUNT_FAILED","FUND_ACCOUNT_APPROVAL_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,kBAAkB,EAAE,EALH;AAMjBC,EAAAA,cAAc,EAAE,EANC;AAOjBC,EAAAA,oBAAoB,EAAE,EAPL;AAQjBC,EAAAA,iBAAiB,EAAE,EARF;AASjBC,EAAAA,uBAAuB,EAAE,EATR;AAUjBC,EAAAA,oBAAoB,EAAE,EAVL;AAWjBC,EAAAA,uBAAuB,EAAE,EAXR;AAYjBC,EAAAA,eAAe,EAAE,EAZA;AAajBC,EAAAA,kBAAkB,EAAE,EAbH;AAcjBC,EAAAA,0BAA0B,EAAE;AAdX,CAArB;;AAgBA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOlB,MAAM,CAACiB,KAAD,EAAQ;AACjBd,IAAAA,OAAO,EAAE;AADQ,GAAR,CAAb;AAGH,CAJD;;AAKA,MAAMgB,kBAAkB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAOlB,MAAM,CAACiB,KAAD,EAAQ;AACjBd,IAAAA,OAAO,EAAE,KADQ;AAEjBC,IAAAA,aAAa,EAAEc,MAAM,CAACE,IAAP,CAAYC,QAFV;AAGjBhB,IAAAA,UAAU,EAAEa,MAAM,CAACE,IAAP,CAAYE,OAHP;AAIjBd,IAAAA,oBAAoB,EAAEU,MAAM,CAACE,IAAP,CAAYG,iBAJjB;AAKjBb,IAAAA,uBAAuB,EAAEQ,MAAM,CAACE,IAAP,CAAYI,oBALpB;AAMjBb,IAAAA,oBAAoB,EAAEO,MAAM,CAACE,IAAP,CAAYK,kBANjB;AAOjBb,IAAAA,uBAAuB,EAAEM,MAAM,CAACE,IAAP,CAAYM,qBAPpB;AAQjBnB,IAAAA,cAAc,EAAEW,MAAM,CAACE,IAAP,CAAYO,iBARX;AASjBlB,IAAAA,iBAAiB,EAAES,MAAM,CAACE,IAAP,CAAYQ,oBATd;AAUjBf,IAAAA,eAAe,EAAEK,MAAM,CAACE,IAAP,CAAYS,kBAVZ;AAWjBf,IAAAA,kBAAkB,EAAEI,MAAM,CAACE,IAAP,CAAYU;AAXf,GAAR,CAAb;AAaH,CAdD;;AAgBA,MAAMC,qBAAqB,GAAG,CAACd,KAAD,EAAQC,MAAR,KAAmB;AAE7C,SAAOlB,MAAM,CAACiB,KAAD,EAAQ;AACjBd,IAAAA,OAAO,EAAE,KADQ;AAEjBG,IAAAA,kBAAkB,EAAEY,MAAM,CAACE;AAFV,GAAR,CAAb;AAIH,CAND;;AAOA,MAAMY,iBAAiB,GAAG,CAACf,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOlB,MAAM,CAACiB,KAAD,EAAQ;AACjBd,IAAAA,OAAO,EAAE,KADQ;AAEjBD,IAAAA,KAAK,EAAEgB,MAAM,CAACe;AAFG,GAAR,CAAb;AAIH,CALD;;AAQA,MAAMlB,0BAA0B,GAAG,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAClD,SAAOlB,MAAM,CAACiB,KAAD,EAAQ;AACjBd,IAAAA,OAAO,EAAE,KADQ;AAEjBY,IAAAA,0BAA0B,EAAE;AAFX,GAAR,CAAb;AAIH,CALD;;AAOA,MAAMmB,WAAW,GAAG,CAACjB,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACiB,IAAf;AACI,SAAKpC,WAAW,CAACqC,kBAAjB;AACI,aAAOpB,gBAAgB,CAACC,KAAD,EAAQC,MAAR,CAAvB;;AACJ,SAAKnB,WAAW,CAACsC,oBAAjB;AACI,aAAOlB,kBAAkB,CAACF,KAAD,EAAQC,MAAR,CAAzB;;AACJ,SAAKnB,WAAW,CAACuC,wBAAjB;AACI,aAAOP,qBAAqB,CAACd,KAAD,EAAQC,MAAR,CAA5B;;AACJ,SAAKnB,WAAW,CAACwC,mBAAjB;AACI,aAAOP,iBAAiB,CAACf,KAAD,EAAQC,MAAR,CAAxB;;AACJ,SAAKnB,WAAW,CAACyC,6BAAjB;AACI,aAAOzB,0BAA0B,CAACE,KAAD,EAAQC,MAAR,CAAjC;;AAEJ;AACI,aAAOD,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeiB,WAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\nimport update from '../utility'\n\nconst initialState = {\n    error: null,\n    loading: false,\n    fundedAccount: [],\n    idsOfFunds: [],\n    getAllFundsAccount: [],\n    pendingDeposit: [],\n    idsOfPendingDeposits: [],\n    pendingWithdrawal: [],\n    idsOfPendingWithdrawals: [],\n    idsOfAllUsersDeposit: [],\n    idsOfAllUsersWithdrawal: [],\n    allUsersDeposit: [],\n    allUsersWithdrawal: [],\n    fundAccountApprovalSuccess: false,\n}\nconst fundAccountStart = (state, action) => {\n    return update(state, {\n        loading: true,\n    })\n}\nconst fundAccountSuccess = (state, action) => {\n    return update(state, {\n        loading: false,\n        fundedAccount: action.data.fundData,\n        idsOfFunds: action.data.getFund,\n        idsOfPendingDeposits: action.data.getPendingDeposit,\n        idsOfPendingWithdrawals: action.data.getPendingWithdrawal,\n        idsOfAllUsersDeposit: action.data.getAllUsersDeposit,\n        idsOfAllUsersWithdrawal: action.data.getAllUsersWithdrawal,\n        pendingDeposit: action.data.thePendingDeposit,\n        pendingWithdrawal: action.data.thePendingWithdrawal,\n        allUsersDeposit: action.data.theAllUsersDeposit,\n        allUsersWithdrawal: action.data.theAllUsersWithdrawal\n    })\n}\n\nconst getFundAccountSuccess = (state, action) => {\n    \n    return update(state, {\n        loading: false,\n        getAllFundsAccount: action.data\n    })\n}\nconst fundAccountFailed = (state, action) => {\n    return update(state, {\n        loading: false,\n        error: action.err\n    })\n}\n\n\nconst fundAccountApprovalSuccess = (state, action) => {\n    return update(state, {\n        loading: false,\n        fundAccountApprovalSuccess: true\n    })\n}\n\nconst fundAccount = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FUND_ACCOUNT_START:\n            return fundAccountStart(state, action)\n        case actionTypes.FUND_ACCOUNT_SUCCESS:\n            return fundAccountSuccess(state, action)\n        case actionTypes.GET_FUND_ACCOUNT_SUCCESS:\n            return getFundAccountSuccess(state, action)\n        case actionTypes.FUND_ACCOUNT_FAILED:\n            return fundAccountFailed(state, action)\n        case actionTypes.FUND_ACCOUNT_APPROVAL_SUCCESS:\n            return fundAccountApprovalSuccess(state, action)\n\n        default:\n            return state\n    }\n}\n\nexport default fundAccount\n"]},"metadata":{},"sourceType":"module"}