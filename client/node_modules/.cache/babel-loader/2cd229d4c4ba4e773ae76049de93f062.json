{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { LastLocationProvider } from 'react-router-last-location';\nimport App from './containers/App';\nimport fundAccount from './store/reducers/fundAccount';\nimport userReducer from './store/reducers/users';\nimport authReducer from './store/reducers/auth'; // import 'bootstrap/dist/css/bootstrap.min.css'\n// import './assets/css/animate.min.css'\n// import './assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0'\n// import './assets/css/demo.css'\n// import './assets/css/pe-icon-7-stroke.css'\n\nimport './sass/main.scss'; // const Bootstrap = React.lazy(() =>\n//     import('bootstrap/dist/css/bootstrap.min.css')\n// )\n// const Animate = React.lazy(() => import('./assets/css/animate.min.css'))\n// const LightBootstrap = React.lazy(() =>\n//     import('./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0')\n// )\n// const DemoCss = React.lazy(() => import('./assets/css/demo.css'))\n// const Stroke = React.lazy(() => import('./assets/css/pe-icon-7-stroke.css'))\n//STEP 2:\n//create a parent component that will load the components conditionally using React.Suspense\n// const ThemeSelector = ({ children }) => {\n//     //   const CHOSEN_THEME = localStorage.getItem('TYPE_OF_THEME') || TYPE_OF_THEME.DEFAULT;\n//     return (\n//         <>\n//             <React.Suspense fallback={<>App</>}>\n//                 {/* {(CHOSEN_THEME === TYPE_OF_THEME.LIGHT_MODE) && <LightTheme />}\n//         {(CHOSEN_THEME === TYPE_OF_THEME.DARK_MODE) && <DarkTheme />} */}\n//                 {<Bootstrap />}\n//                 {<Animate />}\n//                 {<LightBootstrap />}\n//                 {<DemoCss />}\n//                 {<Stroke />}\n//             {children}\n//             </React.Suspense>\n//         </>\n//     )\n// }\n\nconst rootReducer = {\n  user: userReducer,\n  fundAccount: fundAccount,\n  auth: authReducer\n};\nconst store = createStore(combineReducers(rootReducer), composeWithDevTools(applyMiddleware(thunk)));\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(LastLocationProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }\n}))));\nReactDOM.render(app, document.getElementById('root'));","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/index.js"],"names":["React","ReactDOM","BrowserRouter","createStore","applyMiddleware","combineReducers","Provider","thunk","composeWithDevTools","LastLocationProvider","App","fundAccount","userReducer","authReducer","rootReducer","user","auth","store","app","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,4BAArC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,kBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAEH,WADU;AAEhBD,EAAAA,WAAW,EAAEA,WAFG;AAGhBK,EAAAA,IAAI,EAAEH;AAHU,CAApB;AAMA,MAAMI,KAAK,GAAGd,WAAW,CACrBE,eAAe,CAACS,WAAD,CADM,EAErBN,mBAAmB,CAACJ,eAAe,CAACG,KAAD,CAAhB,CAFE,CAAzB;AAKA,MAAMW,GAAG,gBACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CADJ;AAUAhB,QAAQ,CAACkB,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { LastLocationProvider } from 'react-router-last-location'\n\nimport App from './containers/App'\nimport fundAccount from './store/reducers/fundAccount'\nimport userReducer from './store/reducers/users'\nimport authReducer from './store/reducers/auth'\n\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import './assets/css/animate.min.css'\n// import './assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0'\n// import './assets/css/demo.css'\n// import './assets/css/pe-icon-7-stroke.css'\n\nimport './sass/main.scss'\n\n// const Bootstrap = React.lazy(() =>\n//     import('bootstrap/dist/css/bootstrap.min.css')\n// )\n// const Animate = React.lazy(() => import('./assets/css/animate.min.css'))\n// const LightBootstrap = React.lazy(() =>\n//     import('./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0')\n// )\n// const DemoCss = React.lazy(() => import('./assets/css/demo.css'))\n// const Stroke = React.lazy(() => import('./assets/css/pe-icon-7-stroke.css'))\n\n//STEP 2:\n//create a parent component that will load the components conditionally using React.Suspense\n// const ThemeSelector = ({ children }) => {\n//     //   const CHOSEN_THEME = localStorage.getItem('TYPE_OF_THEME') || TYPE_OF_THEME.DEFAULT;\n//     return (\n//         <>\n//             <React.Suspense fallback={<>App</>}>\n//                 {/* {(CHOSEN_THEME === TYPE_OF_THEME.LIGHT_MODE) && <LightTheme />}\n//         {(CHOSEN_THEME === TYPE_OF_THEME.DARK_MODE) && <DarkTheme />} */}\n//                 {<Bootstrap />}\n//                 {<Animate />}\n//                 {<LightBootstrap />}\n//                 {<DemoCss />}\n//                 {<Stroke />}\n//             {children}\n//             </React.Suspense>\n//         </>\n//     )\n// }\n\nconst rootReducer = {\n    user: userReducer,\n    fundAccount: fundAccount,\n    auth: authReducer,\n}\n\nconst store = createStore(\n    combineReducers(rootReducer),\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <LastLocationProvider>\n                <App />\n            </LastLocationProvider>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}