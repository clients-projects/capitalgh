{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/views/Referrals.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as orderAction from '../store/actions/burgerIndex';\nimport avatar from '../assets/img/faces/face-1.jpg';\n\nconst Referrals = props => {\n  return /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      display: 'grid'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    xs: \"12\",\n    className: \"referrals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"referrals__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"REFERRALS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: \"avatar\",\n    className: \"referrals__primary--img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"referrals__primary--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, ' ', \"Your Upline:\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"referrals__primary--subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, ' ', props.upline))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__secondary--item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, \"Total referral comission:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, \"$\", props.totalReferralCommission))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__secondary--item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, \"Referrals: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 48\n    }\n  }, props.totalReferrals))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__secondary--item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Active referrals:\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, props.activeReferrals))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referrals__link--box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"referrals__link--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"referal link:\", ' '), /*#__PURE__*/React.createElement(Link, {\n    to: \"referrals\",\n    id: \"linkRef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, props.userData.referralLink, ' ')), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: props.userData.referralLink,\n    onCopy: () => console.log('copied'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn1 referrals__link--btn\",\n    \"data-clipboard-target\": \"#linkRef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Copy Link\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    upline: state.auth.userData.upline,\n    referrals: state.auth.userData.referrals,\n    userData: state.auth.userData,\n    activeReferrals: state.auth.userData.activeReferrals,\n    totalReferrals: state.auth.userData.totalReferrals,\n    totalReferralCommission: state.auth.userData.totalReferralCommission\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetUserHistory: token => dispatch(orderAction.initGetUserHistory(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Referrals);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/views/Referrals.jsx"],"names":["React","connect","Link","Grid","Row","Col","CopyToClipboard","orderAction","avatar","Referrals","props","display","upline","totalReferralCommission","totalReferrals","activeReferrals","userData","referralLink","console","log","mapStateToProps","state","auth","referrals","mapDispatchToProps","dispatch","onInitGetUserHistory","token","initGetUserHistory"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport * as orderAction from '../store/actions/burgerIndex'\nimport avatar from '../assets/img/faces/face-1.jpg'\n\nconst Referrals = (props) => {\n    return (\n        <Grid fluid>\n            \n            <Row style={{ display: 'grid' }}>\n                <Col md='12' xs='12' className='referrals'>\n                    <h2 className='referrals__heading'>REFERRALS</h2>\n\n                    <div className='referrals__box'>\n                        <div className='referrals__primary'>\n                            <img\n                                src={avatar}\n                                alt='avatar'\n                                className='referrals__primary--img'\n                            />\n\n                            <p className='referrals__primary--title'>\n                                {' '}\n                                Your Upline:{' '}\n                                <span className='referrals__primary--subtitle'>\n                                    {' '}\n                                    {props.upline}\n                                </span>\n                            </p>\n                        </div>\n                        <div className='referrals__secondary'>\n                            <div className='referrals__secondary--item'>\n                                <span>\n                                    Total referral comission:{' '}\n                                    <b>${props.totalReferralCommission}</b>\n                                </span>\n                            </div>\n                            <div className='referrals__secondary--item'>\n                                <span>\n                                    Referrals: <b>{props.totalReferrals}</b>\n                                </span>\n                            </div>\n                            <div className='referrals__secondary--item'>\n                                <span>\n                                    Active referrals:{' '}\n                                    <b>{props.activeReferrals}</b>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div\n                        className='referrals__link'\n                    >\n                        <div className='referrals__link--box'>\n                         \n                            <span className='referrals__link--title'>\n                                referal link:{' '}\n                            </span>\n                            <Link to='referrals' id='linkRef'>\n                                {props.userData.referralLink}{' '}\n                            </Link>\n                        </div>\n\n                        <CopyToClipboard\n                            text={props.userData.referralLink}\n                            onCopy={() => console.log('copied')}\n                        >\n                            <button\n                                className='btn1 referrals__link--btn'\n                                data-clipboard-target='#linkRef'\n                            >\n                                Copy Link\n                            </button>\n                        </CopyToClipboard>\n                    </div>\n                </Col>\n            </Row>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        upline: state.auth.userData.upline,\n        referrals: state.auth.userData.referrals,\n        userData: state.auth.userData,\n\n        activeReferrals: state.auth.userData.activeReferrals,\n        totalReferrals: state.auth.userData.totalReferrals,\n        totalReferralCommission: state.auth.userData.totalReferralCommission,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetUserHistory: (token) =>\n            dispatch(orderAction.initGetUserHistory(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Referrals)\n"]},"metadata":{},"sourceType":"module"}