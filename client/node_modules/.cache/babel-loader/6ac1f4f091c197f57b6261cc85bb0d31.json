{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/components/Sidebar/Sidebar.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AdminNavbarLinks from '../Navbars/AdminNavbarLinks';\nimport logo from '../../images/logo2.png';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n  }\n\n  updateDimensions() {\n    this.setState({\n      width: window.innerWidth\n    });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener('resize', this.updateDimensions.bind(this));\n  }\n\n  render() {\n    const sidebarBackground = {\n      backgroundImage: 'url(' + this.props.image + ')'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"sidebar\",\n      \"data-color\": this.props.color,\n      \"data-image\": this.props.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, this.props.hasImage ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-background\",\n      style: sidebarBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo_image\",\n      className: \"logo-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, this.state.width <= 991 ? /*#__PURE__*/React.createElement(AdminNavbarLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }\n    }) : null, this.props.dashboardRoutes.map((prop, key) => {\n      if (!prop.redirect) return /*#__PURE__*/React.createElement(\"li\", {\n        className: this.activeRoute(prop.layout + prop.path),\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: prop.layout + prop.path,\n        className: \"nav-link\",\n        activeClassName: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: prop.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      }, prop.name)));\n      return null;\n    }))));\n  }\n\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Component","NavLink","AdminNavbarLinks","logo","Sidebar","constructor","props","state","width","window","innerWidth","activeRoute","routeName","location","pathname","indexOf","updateDimensions","setState","componentDidMount","addEventListener","bind","render","sidebarBackground","backgroundImage","image","color","hasImage","dashboardRoutes","map","prop","key","redirect","layout","path","icon","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport AdminNavbarLinks from '../Navbars/AdminNavbarLinks'\n\nimport logo from '../../images/logo2.png'\nclass Sidebar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            width: window.innerWidth,\n        }\n    }\n    activeRoute(routeName) {\n        return this.props.location.pathname.indexOf(routeName) > -1\n            ? 'active'\n            : ''\n    }\n    updateDimensions() {\n        this.setState({ width: window.innerWidth })\n    }\n    componentDidMount() {\n        this.updateDimensions()\n        window.addEventListener('resize', this.updateDimensions.bind(this))\n    }\n    render() {\n        const sidebarBackground = {\n            backgroundImage: 'url(' + this.props.image + ')',\n        }\n        return (\n            <div\n                id='sidebar'\n                className='sidebar'\n                data-color={this.props.color}\n                data-image={this.props.image}\n            >\n                {this.props.hasImage ? (\n                    <div\n                        className='sidebar-background'\n                        style={sidebarBackground}\n                    />\n                ) : null}\n                <div className='logo'>\n                    <img src={logo} alt='logo_image' className='logo-2' />\n\n                    {/* <a\n                        href='/admin/dashboard'\n                        className='simple-text logo-normal'\n                    >\n                        royalinvestmentcoin\n                    </a> */}\n                </div>\n                <div className='sidebar-wrapper'>\n                    <ul className='nav'>\n                        {this.state.width <= 991 ? <AdminNavbarLinks /> : null}\n                        {this.props.dashboardRoutes.map((prop, key) => {\n                            if (!prop.redirect)\n                                return (\n                                    <li\n                                        className={this.activeRoute(\n                                            prop.layout + prop.path\n                                        )}\n                                        key={key}\n                                    >\n                                        <NavLink\n                                            to={prop.layout + prop.path}\n                                            className='nav-link'\n                                            activeClassName='active'\n                                        >\n                                            <i className={prop.icon} />\n                                            <p>{prop.name}</p>\n                                        </NavLink>\n                                    </li>\n                                )\n                            return null\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar\n"]},"metadata":{},"sourceType":"module"}