{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcrypto/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/AccountSettings.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Row, Col, ControlLabel, FormControl, FormGroup } from 'react-bootstrap';\nimport { Card } from '../../components/Card/Card';\nimport UserCard from '../../components/UserCard/UserCard';\nimport { connect } from 'react-redux';\nimport * as orderAction from '../../store/actions/burgerIndex';\nimport avatar from '../../assets/img/faces/face-1.jpg';\n\nconst UserProfile = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        fullname = _useState2[0],\n        setFullname = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        bitcoin = _useState8[0],\n        setBitcoin = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        ethereum = _useState10[0],\n        setEthereum = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        phone = _useState12[0],\n        setPhone = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        country = _useState14[0],\n        setCountry = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        city = _useState16[0],\n        setCity = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        password = _useState18[0],\n        setPassword = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        confirmPassword = _useState20[0],\n        setConfirmNewPassword = _useState20[1];\n\n  const _useState21 = useState(''),\n        _useState22 = _slicedToArray(_useState21, 2),\n        oldEmail = _useState22[0],\n        setOldEmail = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        message = _useState24[0],\n        setMessage = _useState24[1];\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        error = _useState26[0],\n        setError = _useState26[1];\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === 'fullname') {\n      setFullname(value);\n    }\n\n    if (name === 'username') {\n      setUsername(value);\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n\n    if (name === 'bitcoin') {\n      setBitcoin(value);\n    }\n\n    if (name === 'ethereum') {\n      setEthereum(value);\n    }\n\n    if (name === 'phone') {\n      setPhone(value);\n    }\n\n    if (name === 'country') {\n      setCountry(value);\n    }\n\n    if (name === 'city') {\n      setCity(value);\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n    }\n\n    if (name === 'confirmNewPassword') {\n      setConfirmNewPassword(value);\n    }\n  };\n\n  useEffect(() => {\n    if (props.userData) {\n      const fetchedBitcoin = props.userData.bitcoinAccount;\n      const fetchedEmail = props.userData.email;\n      const fetchedEthereum = props.userData.ethereumAccount;\n      const fetchedFullname = props.userData.fullname;\n      const fetchedUsername = props.userData.username;\n      const fetchedCity = props.userData.city;\n      const fetchedCountry = props.userData.country;\n      const fetchedPhone = props.userData.phone;\n      setFullname(fetchedFullname);\n      setCity(fetchedCity);\n      setCountry(fetchedCountry);\n      setPhone(fetchedPhone);\n      setUsername(fetchedUsername);\n      setEmail(fetchedEmail);\n      setOldEmail(fetchedEmail);\n      setBitcoin(fetchedBitcoin);\n      setEthereum(fetchedEthereum);\n    }\n  }, [props]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      setError(true);\n      return;\n    } else {\n      setMessage('Updated successfully');\n      setError(false);\n    }\n\n    const formData = {\n      fullname,\n      username,\n      password,\n      oldEmail,\n      email,\n      city,\n      country,\n      phone,\n      ethereum,\n      bitcoin,\n      confirmPassword\n    };\n    props.onInitUpdateProfile(formData, props.tokenId);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UserCard, {\n    bgImage: \"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\",\n    avatar: avatar,\n    name: props.userData ? props.userData.fullname : '',\n    userName: props.userData ? props.userData.username : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Edit Profile\",\n    content: /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, message && /*#__PURE__*/React.createElement(\"p\", {\n      className: error ? 'message message__error' : 'message',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, message), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"fullname\",\n      onChange: handleChange,\n      value: fullname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(FormControl, {\n      name: \"username\",\n      type: \"text\",\n      value: username,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      minLength: 5,\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      name: \"phone\",\n      value: phone,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"city\",\n      value: city,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"country\",\n      value: country,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 45\n      }\n    }, \"Bitcoin Address\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"bitcoin\",\n      value: bitcoin,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 45\n      }\n    }, \"Ethereum Address\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"ethereum\",\n      value: ethereum,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, \"Change Password\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: password,\n      name: \"password\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    }, \"Retype Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: confirmPassword,\n      name: \"confirmNewPassword\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button btn__profile\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 37\n      }\n    }, props.loading ? 'Loading...' : 'Update Profile')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.user.loading,\n    err: state.auth.error,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    userData: state.auth.userData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitUpdateProfile: (data, token) => dispatch(orderAction.initUpdateProfile(data, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/views/siteOwner/AccountSettings.jsx"],"names":["React","useState","useEffect","Grid","Row","Col","ControlLabel","FormControl","FormGroup","Card","UserCard","connect","orderAction","avatar","UserProfile","props","fullname","setFullname","username","setUsername","email","setEmail","bitcoin","setBitcoin","ethereum","setEthereum","phone","setPhone","country","setCountry","city","setCity","password","setPassword","confirmPassword","setConfirmNewPassword","oldEmail","setOldEmail","message","setMessage","error","setError","handleChange","e","name","target","value","userData","fetchedBitcoin","bitcoinAccount","fetchedEmail","fetchedEthereum","ethereumAccount","fetchedFullname","fetchedUsername","fetchedCity","fetchedCountry","fetchedPhone","handleSubmit","preventDefault","formData","onInitUpdateProfile","tokenId","loading","mapStateToProps","state","user","err","auth","userId","mapDispatchToProps","dispatch","data","token","initUpdateProfile"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Grid,\n    Row,\n    Col,\n    ControlLabel,\n    FormControl,\n    FormGroup,\n} from 'react-bootstrap'\n\nimport { Card } from '../../components/Card/Card'\nimport UserCard from '../../components/UserCard/UserCard'\nimport { connect } from 'react-redux'\n\nimport * as orderAction from '../../store/actions/burgerIndex'\n\nimport avatar from '../../assets/img/faces/face-1.jpg'\n\nconst UserProfile = (props) => {\n    const [fullname, setFullname] = useState('')\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [bitcoin, setBitcoin] = useState('')\n    const [ethereum, setEthereum] = useState('')\n    const [phone, setPhone] = useState('')\n    const [country, setCountry] = useState('')\n    const [city, setCity] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmNewPassword] = useState('')\n\n    const [oldEmail, setOldEmail] = useState('')\n\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState(false)\n\n    const handleChange = (e) => {\n        const name = e.target.name\n        const value = e.target.value\n\n        if (name === 'fullname') {\n            setFullname(value)\n        }\n        if (name === 'username') {\n            setUsername(value)\n        }\n        if (name === 'email') {\n            setEmail(value)\n        }\n        if (name === 'bitcoin') {\n            setBitcoin(value)\n        }\n        if (name === 'ethereum') {\n            setEthereum(value)\n        }\n        if (name === 'phone') {\n            setPhone(value)\n        }\n        if (name === 'country') {\n            setCountry(value)\n        }\n        if (name === 'city') {\n            setCity(value)\n        }\n        if (name === 'password') {\n            setPassword(value)\n        }\n        if (name === 'confirmNewPassword') {\n            setConfirmNewPassword(value)\n        }\n    }\n\n    useEffect(() => {\n        if (props.userData) {\n            const fetchedBitcoin = props.userData.bitcoinAccount\n            const fetchedEmail = props.userData.email\n            const fetchedEthereum = props.userData.ethereumAccount\n            const fetchedFullname = props.userData.fullname\n            const fetchedUsername = props.userData.username\n            const fetchedCity = props.userData.city\n            const fetchedCountry = props.userData.country\n            const fetchedPhone = props.userData.phone\n\n            setFullname(fetchedFullname)\n\n            setCity(fetchedCity)\n            setCountry(fetchedCountry)\n            setPhone(fetchedPhone)\n            setUsername(fetchedUsername)\n\n            setEmail(fetchedEmail)\n            setOldEmail(fetchedEmail)\n            setBitcoin(fetchedBitcoin)\n\n            setEthereum(fetchedEthereum)\n        }\n    }, [props])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n            setError(true)\n            return\n        } else {\n            setMessage('Updated successfully')\n            setError(false)\n        }\n        const formData = {\n            fullname,\n            username,\n            password,\n            oldEmail,\n            email,\n            city,\n            country,\n            phone,\n            ethereum,\n            bitcoin,\n            confirmPassword,\n        }\n\n        props.onInitUpdateProfile(formData, props.tokenId)\n    }\n\n    return (\n        <div className='content'>\n            <Grid fluid>\n                <Row>\n                    <Col md={4}>\n                        <UserCard\n                            bgImage='https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400'\n                            avatar={avatar}\n                            name={props.userData ? props.userData.fullname : ''}\n                            userName={\n                                props.userData ? props.userData.username : ''\n                            }\n                        />\n                    </Col>\n                    <Col md={8}>\n                        <Card\n                            title='Edit Profile'\n                            content={\n                                <form onSubmit={handleSubmit}>\n                                    {message && (\n                                        <p\n                                            className={\n                                                error\n                                                    ? 'message message__error'\n                                                    : 'message'\n                                            }\n                                        >\n                                            {message}\n                                        </p>\n                                    )}\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Full Name\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='fullname'\n                                                onChange={handleChange}\n                                                value={fullname}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-6 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Username\n                                            </ControlLabel>\n                                            <FormControl\n                                                name='username'\n                                                type='text'\n                                                value={username}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-6 col-sm-12 col-xs-12'>\n                                            <ControlLabel>Email</ControlLabel>\n                                            <FormControl\n                                                minLength={5}\n                                                type='text'\n                                                name='email'\n                                                value={email}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-6 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Phone Number\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                name='phone'\n                                                value={phone}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-6 col-sm-12 col-xs-12'>\n                                            <ControlLabel>City</ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='city'\n                                                value={city}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup className='col-md-6 col-sm-12 col-xs-12'>\n                                            <ControlLabel>Country</ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='country'\n                                                value={country}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Bitcoin Address\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='bitcoin'\n                                                value={bitcoin}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Ethereum Address\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='ethereum'\n                                                value={ethereum}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <div>\n                                        <h4>Change Password</h4>\n                                    </div>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                New Password\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='password'\n                                                value={password}\n                                                name='password'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Retype Password\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='password'\n                                                value={confirmPassword}\n                                                name='confirmNewPassword'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <button\n                                        className='button btn__profile'\n                                        type='submit'\n                                    >\n                                        {props.loading\n                                            ? 'Loading...'\n                                            : 'Update Profile'}\n                                    </button>\n                                    {/* <div className='clearfix' /> */}\n                                </form>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.user.loading,\n        err: state.auth.error,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        userData: state.auth.userData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitUpdateProfile: (data, token) =>\n            dispatch(orderAction.initUpdateProfile(data, token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)\n"]},"metadata":{},"sourceType":"module"}