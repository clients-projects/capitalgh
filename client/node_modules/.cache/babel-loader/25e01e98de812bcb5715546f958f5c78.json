{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/fxcrypto/client/src/layouts/siteOwnerAdmin.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NotificationSystem from 'react-notification-system';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions/burgerIndex';\nimport AdminNavbar from '../components/Navbars/siteOwnerAdminNavbar';\nimport Footer from '../components/Footer/Footer';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport Deposit from '../views/Deposit';\nimport PlanConfirmation from '../views/PlanConfirmation';\nimport UserDetails from '../views/siteOwner/UserDetails'; //import FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n\nimport { style } from '../variables/Variables';\nimport { siteOwnerDashboardRoutes } from '../routes.js'; //import image from \"../assets/img/sidebar-3.jpg\";\n\nimport sideBarImg from '../images/hero.jpg';\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleNotificationClick = position => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = 'success';\n          break;\n\n        case 2:\n          level = 'warning';\n          break;\n\n        case 3:\n          level = 'error';\n          break;\n\n        case 4:\n          level = 'info';\n          break;\n\n        default:\n          break;\n      }\n\n      this.state._notificationSystem.addNotification({\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          \"data-notify\": \"icon\",\n          className: \"pe-7s-gift\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }\n        }),\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }\n        }, \"Coinperfect investment Dashboard\"), \" - The most advanced trading platform\"),\n        level: level,\n        position: position,\n        autoDismiss: 15\n      });\n    };\n\n    this.getsiteOwnerDashboardRoutes = siteOwnerDashboardRoutes => {\n      return siteOwnerDashboardRoutes.map((prop, key) => {\n        if (prop.layout === '/admin') {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n              handleClick: this.handleNotificationClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }\n            })),\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < siteOwnerDashboardRoutes.length; i++) {\n        if (this.props.location.pathname.indexOf(siteOwnerDashboardRoutes[i].layout + siteOwnerDashboardRoutes[i].path) !== -1) {\n          return siteOwnerDashboardRoutes[i].name;\n        }\n      }\n\n      const pathRoute = path.slice(7);\n      return pathRoute ? pathRoute : 'royalinvestmentcoin';\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.handleFixedClick = () => {\n      if (this.state.fixedClasses === 'dropdown') {\n        this.setState({\n          fixedClasses: 'dropdown show-dropdown open'\n        });\n      } else {\n        this.setState({\n          fixedClasses: 'dropdown'\n        });\n      }\n    };\n\n    this.state = {\n      _notificationSystem: null,\n      image: sideBarImg,\n      color: 'black',\n      hasImage: true,\n      fixedClasses: 'dropdown show-dropdown open'\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      _notificationSystem: this.refs.notificationSystem\n    });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n\n    switch (color) {\n      case 1:\n        level = 'success';\n        break;\n\n      case 2:\n        level = 'warning';\n        break;\n\n      case 3:\n        level = 'error';\n        break;\n\n      case 4:\n        level = 'info';\n        break;\n\n      default:\n        break;\n    }\n\n    _notificationSystem.addNotification({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"pe-7s-gift\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 20\n        }\n      }),\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 32\n        }\n      }, \"royalinvestmentcoin Dashboard\"), \" - The most advanced trading platform\"),\n      level: level,\n      position: 'tr',\n      autoDismiss: 15\n    });\n\n    if (this.props.tokenId) {\n      this.props.onInitGetUser(this.props.tokenId);\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-open') !== -1) {\n      document.documentElement.classList.toggle('nav-open');\n    }\n\n    if (e.history.action === 'PUSH') {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      style: {\n        background: '#101d2c'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NotificationSystem, {\n      ref: \"notificationSystem\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      dashboardRoutes: siteOwnerDashboardRoutes,\n      image: this.state.image,\n      color: this.state.color,\n      hasImage: this.state.hasImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      style: {\n        background: '#101d2c'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({\n      siteOwner: true\n    }, this.props, {\n      brandText: this.getBrandText(this.props.location.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/plan-confirmation/:id\",\n      component: PlanConfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/deposit\",\n      component: Deposit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin/member\",\n      component: UserDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }), this.getsiteOwnerDashboardRoutes(siteOwnerDashboardRoutes)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    err: state.auth.error,\n    loading: state.user.loading,\n    siteOwner: state.auth.siteOwner,\n    redirectToLoginPage: state.auth.redirect,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetUser: token => dispatch(actionTypes.initGetUser(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcrypto/client/src/layouts/siteOwnerAdmin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","connect","actionTypes","AdminNavbar","Footer","Sidebar","Deposit","PlanConfirmation","UserDetails","style","siteOwnerDashboardRoutes","sideBarImg","Admin","constructor","props","handleNotificationClick","position","color","Math","floor","random","level","state","_notificationSystem","addNotification","title","message","autoDismiss","getsiteOwnerDashboardRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","pathRoute","slice","handleImageClick","image","setState","handleColorClick","handleHasImage","hasImage","handleFixedClick","fixedClasses","componentDidMount","refs","notificationSystem","tokenId","onInitGetUser","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","mainPanel","render","background","mapStateToProps","err","auth","error","loading","user","siteOwner","redirectToLoginPage","redirect","userId","mapDispatchToProps","dispatch","token","initGetUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport NotificationSystem from 'react-notification-system'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../store/actions/burgerIndex'\n\nimport AdminNavbar from '../components/Navbars/siteOwnerAdminNavbar'\nimport Footer from '../components/Footer/Footer'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport Deposit from '../views/Deposit'\nimport PlanConfirmation from '../views/PlanConfirmation'\nimport UserDetails from '../views/siteOwner/UserDetails'\n\n//import FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n\nimport { style } from '../variables/Variables'\n\nimport { siteOwnerDashboardRoutes } from '../routes.js'\n\n//import image from \"../assets/img/sidebar-3.jpg\";\nimport sideBarImg from '../images/hero.jpg'\nclass Admin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _notificationSystem: null,\n            image: sideBarImg,\n            color: 'black',\n            hasImage: true,\n            fixedClasses: 'dropdown show-dropdown open',\n        }\n    }\n\n    handleNotificationClick = (position) => {\n        var color = Math.floor(Math.random() * 4 + 1)\n        var level\n        switch (color) {\n            case 1:\n                level = 'success'\n                break\n            case 2:\n                level = 'warning'\n                break\n            case 3:\n                level = 'error'\n                break\n            case 4:\n                level = 'info'\n                break\n            default:\n                break\n        }\n\n        this.state._notificationSystem.addNotification({\n            title: <span data-notify='icon' className='pe-7s-gift' />,\n            message: (\n                <div>\n                    Welcome to <b>Coinperfect investment Dashboard</b> - The\n                    most advanced trading platform\n                </div>\n            ),\n            level: level,\n            position: position,\n            autoDismiss: 15,\n        })\n    }\n    getsiteOwnerDashboardRoutes = (siteOwnerDashboardRoutes) => {\n        return siteOwnerDashboardRoutes.map((prop, key) => {\n            if (prop.layout === '/admin') {\n                return (\n                    <Route\n                        path={prop.layout + prop.path}\n                        render={(props) => (\n                            <prop.component\n                                {...props}\n                                handleClick={this.handleNotificationClick}\n                            />\n                        )}\n                        key={key}\n                    />\n                )\n            } else {\n                return null\n            }\n        })\n    }\n    getBrandText = (path) => {\n        for (let i = 0; i < siteOwnerDashboardRoutes.length; i++) {\n            if (\n                this.props.location.pathname.indexOf(\n                    siteOwnerDashboardRoutes[i].layout +\n                        siteOwnerDashboardRoutes[i].path\n                ) !== -1\n            ) {\n                return siteOwnerDashboardRoutes[i].name\n            }\n        }\n        const pathRoute = path.slice(7)\n        return pathRoute ? pathRoute : 'royalinvestmentcoin'\n    }\n    handleImageClick = (image) => {\n        this.setState({ image: image })\n    }\n    handleColorClick = (color) => {\n        this.setState({ color: color })\n    }\n    handleHasImage = (hasImage) => {\n        this.setState({ hasImage: hasImage })\n    }\n    handleFixedClick = () => {\n        if (this.state.fixedClasses === 'dropdown') {\n            this.setState({ fixedClasses: 'dropdown show-dropdown open' })\n        } else {\n            this.setState({ fixedClasses: 'dropdown' })\n        }\n    }\n    componentDidMount() {\n        this.setState({ _notificationSystem: this.refs.notificationSystem })\n        var _notificationSystem = this.refs.notificationSystem\n        var color = Math.floor(Math.random() * 4 + 1)\n        var level\n        switch (color) {\n            case 1:\n                level = 'success'\n                break\n            case 2:\n                level = 'warning'\n                break\n            case 3:\n                level = 'error'\n                break\n            case 4:\n                level = 'info'\n                break\n            default:\n                break\n        }\n        _notificationSystem.addNotification({\n            title: <span data-notify='icon' className='pe-7s-gift' />,\n            message: (\n                <div>\n                    Welcome to <b>royalinvestmentcoin Dashboard</b> - The most\n                    advanced trading platform\n                </div>\n            ),\n            level: level,\n            position: 'tr',\n            autoDismiss: 15,\n        })\n\n        if (this.props.tokenId) {\n            this.props.onInitGetUser(this.props.tokenId)\n        }\n    }\n    componentDidUpdate(e) {\n        if (\n            window.innerWidth < 993 &&\n            e.history.location.pathname !== e.location.pathname &&\n            document.documentElement.className.indexOf('nav-open') !== -1\n        ) {\n            document.documentElement.classList.toggle('nav-open')\n        }\n        if (e.history.action === 'PUSH') {\n            document.documentElement.scrollTop = 0\n            document.scrollingElement.scrollTop = 0\n            this.refs.mainPanel.scrollTop = 0\n        }\n    }\n\n    render() {\n        return (\n            <div className='wrapper' style={{ background: '#101d2c' }}>\n                <NotificationSystem ref='notificationSystem' style={style} />\n                <Sidebar\n                    {...this.props}\n                    dashboardRoutes={siteOwnerDashboardRoutes}\n                    image={this.state.image}\n                    color={this.state.color}\n                    hasImage={this.state.hasImage}\n                />\n                <div\n                    id='main-panel'\n                    className='main-panel'\n                    ref='mainPanel'\n                    style={{ background: '#101d2c' }}\n                >\n                    <AdminNavbar\n                        siteOwner={true}\n                        {...this.props}\n                        brandText={this.getBrandText(\n                            this.props.location.pathname\n                        )}\n                    />\n                    <Switch>\n                      \n                        <Route\n                            path='/admin/plan-confirmation/:id'\n                            component={PlanConfirmation}\n                        />\n                        <Route path='/admin/deposit' component={Deposit} />\n                        <Route path='/admin/member' component={UserDetails} />\n\n                        {this.getsiteOwnerDashboardRoutes(\n                            siteOwnerDashboardRoutes\n                        )}\n                    </Switch>\n                    <Footer />\n                    {/* <FixedPlugin\n            handleImageClick={this.handleImageClick}\n            handleColorClick={this.handleColorClick}\n            handleHasImage={this.handleHasImage}\n            bgColor={this.state[\"color\"]}\n            bgImage={this.state[\"image\"]}\n            mini={this.state[\"mini\"]}\n            handleFixedClick={this.handleFixedClick}\n            fixedClasses={this.state.fixedClasses}\n          /> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        err: state.auth.error,\n        loading: state.user.loading,\n        siteOwner: state.auth.siteOwner,\n        redirectToLoginPage: state.auth.redirect,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetUser: (token) => dispatch(actionTypes.initGetUser(token)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin)\n"]},"metadata":{},"sourceType":"module"}