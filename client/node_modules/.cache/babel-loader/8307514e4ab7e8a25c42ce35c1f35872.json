{"ast":null,"code":"import _slicedToArray from \"/home/niscolinx/projects/fxcryptotokeninvestment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/UserDetails.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport { Grid, Row, Col, ControlLabel, FormControl, FormGroup, Table } from 'react-bootstrap';\nimport { Card } from '../../components/Card/Card';\nimport * as orderAction from '../../store/actions/burgerIndex';\nconst thDepositArray = ['No', 'Amount', 'Package', 'profit', 'Date'];\n\nconst UserDetails = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        userDeposits = _useState2[0],\n        setUserDeposits = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        profit = _useState4[0],\n        setProfit = _useState4[1];\n\n  const gottenAllUser = useRef();\n  const parsed = queryString.parse(window.location.search);\n  useEffect(() => {\n    if (!gottenAllUser.current) {\n      if (props.tokenId) {\n        props.onInitGetMember(parsed.id, props.tokenId);\n      }\n\n      gottenAllUser.current = true;\n    } else {\n      if (props.memberDeposits) {\n        setUserDeposits(props.memberDeposits);\n      }\n    }\n  }, [props, parsed.id]);\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        accountBalance = _useState6[0],\n        setAccountBalance = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        fullname = _useState8[0],\n        setFullname = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        username = _useState10[0],\n        setUsername = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        email = _useState12[0],\n        setEmail = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        bitcoin = _useState14[0],\n        setBitcoin = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ethereum = _useState16[0],\n        setEthereum = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        phone = _useState18[0],\n        setPhone = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        country = _useState20[0],\n        setCountry = _useState20[1];\n\n  const _useState21 = useState(''),\n        _useState22 = _slicedToArray(_useState21, 2),\n        city = _useState22[0],\n        setCity = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        password = _useState24[0],\n        setPassword = _useState24[1];\n\n  const _useState25 = useState(''),\n        _useState26 = _slicedToArray(_useState25, 2),\n        confirmPassword = _useState26[0],\n        setConfirmNewPassword = _useState26[1];\n\n  const _useState27 = useState(''),\n        _useState28 = _slicedToArray(_useState27, 2),\n        oldEmail = _useState28[0],\n        setOldEmail = _useState28[1];\n\n  const _useState29 = useState(0),\n        _useState30 = _slicedToArray(_useState29, 2),\n        activeReferrals = _useState30[0],\n        setActiveReferrals = _useState30[1];\n\n  const _useState31 = useState(0),\n        _useState32 = _slicedToArray(_useState31, 2),\n        totalReferrals = _useState32[0],\n        setTotalReferrals = _useState32[1];\n\n  const _useState33 = useState(0),\n        _useState34 = _slicedToArray(_useState33, 2),\n        dailyEarning = _useState34[0],\n        setDailyEarning = _useState34[1];\n\n  const _useState35 = useState(0),\n        _useState36 = _slicedToArray(_useState35, 2),\n        totalEarnings = _useState36[0],\n        setTotalEarnings = _useState36[1];\n\n  const _useState37 = useState(0),\n        _useState38 = _slicedToArray(_useState37, 2),\n        totalReferralCommission = _useState38[0],\n        setTotalReferralCommission = _useState38[1];\n\n  const _useState39 = useState(''),\n        _useState40 = _slicedToArray(_useState39, 2),\n        message = _useState40[0],\n        setMessage = _useState40[1];\n\n  const _useState41 = useState(false),\n        _useState42 = _slicedToArray(_useState41, 2),\n        error = _useState42[0],\n        setError = _useState42[1];\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === 'fullname') {\n      setFullname(value);\n    }\n\n    if (name === 'dailyEarning') {\n      setDailyEarning(value);\n    }\n\n    if (name === 'totalEarnings') {\n      setTotalEarnings(value);\n    }\n\n    if (name === 'accountBalance') {\n      setAccountBalance(value);\n    }\n\n    if (name === 'activeReferrals') {\n      setActiveReferrals(value);\n    }\n\n    if (name === 'totalReferrals') {\n      setTotalReferrals(value);\n    }\n\n    if (name === 'totalReferralCommission') {\n      setTotalReferralCommission(value);\n    }\n\n    if (name === 'username') {\n      setUsername(value);\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n\n    if (name === 'bitcoin') {\n      setBitcoin(value);\n    }\n\n    if (name === 'ethereum') {\n      setEthereum(value);\n    }\n\n    if (name === 'phone') {\n      setPhone(value);\n    }\n\n    if (name === 'country') {\n      setCountry(value);\n    }\n\n    if (name === 'city') {\n      setCity(value);\n    }\n\n    if (name === 'password') {\n      setPassword(value);\n    }\n\n    if (name === 'confirmNewPassword') {\n      setConfirmNewPassword(value);\n    }\n  };\n\n  const handleMember = (e, p) => {\n    setProfit({\n      [p.fundNO]: e.target.value\n    });\n  };\n\n  const updateMemberProfit = id => {\n    for (let i = 0; i < props.memberId.length; i++) {\n      if (id === i) {\n        props.onInitUpdateProfit(profit[i + 1], props.memberId[i]._id, props.tokenId);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.member) {\n      const fetchedBitcoin = props.member.bitcoinAccount;\n      const fetchedEmail = props.member.email;\n      const fetchedEthereum = props.member.ethereumAccount;\n      const fetchedFullname = props.member.fullname;\n      const fetchedUsername = props.member.username;\n      const fetchedCity = props.member.city;\n      const fetchedCountry = props.member.country;\n      const fetchedPhone = props.member.phone;\n      const fetchedDailyEarning = props.member.dailyEarning;\n      const fetchedTotalEarnings = props.member.totalEarnings;\n      const fetchedAccountBalance = props.member.accountBalance;\n      const fetchedActiveReferrals = props.member.activeReferrals;\n      const fetchedTotalReferrals = props.member.totalReferrals;\n      const fetchedTotalReferralCommission = props.member.totalReferralCommission;\n      setFullname(fetchedFullname);\n      setCity(fetchedCity);\n      setCountry(fetchedCountry);\n      setPhone(fetchedPhone);\n      setUsername(fetchedUsername);\n      setEmail(fetchedEmail);\n      setOldEmail(fetchedEmail);\n      setBitcoin(fetchedBitcoin);\n      setEthereum(fetchedEthereum);\n      setDailyEarning(fetchedDailyEarning);\n      setTotalEarnings(fetchedTotalEarnings);\n      setActiveReferrals(fetchedActiveReferrals);\n      setTotalReferrals(fetchedTotalReferrals);\n      setTotalReferralCommission(fetchedTotalReferralCommission);\n      setAccountBalance(fetchedAccountBalance);\n    }\n  }, [props]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      setError(true);\n      return;\n    } else {\n      setMessage('Updated successfully');\n      setError(false);\n    }\n\n    const formData = {\n      accountBalance: Number(accountBalance),\n      fullname,\n      username,\n      password,\n      oldEmail,\n      email,\n      city,\n      dailyEarning: Number(dailyEarning),\n      totalEarnings: Number(totalEarnings),\n      activeReferrals: Number(activeReferrals),\n      totalReferrals: Number(totalReferrals),\n      totalReferralCommission: Number(totalReferralCommission),\n      country,\n      phone,\n      ethereum,\n      bitcoin,\n      confirmPassword\n    };\n    props.onInitUpdateMember(formData, props.tokenId);\n  };\n\n  console.log({\n    profit\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    style: {\n      margin: '2rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      display: 'grid'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    style: {\n      justifySelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"User Details\",\n    content: /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, message && /*#__PURE__*/React.createElement(\"p\", {\n      className: error ? 'message message__error' : 'message',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    }, message), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    }, \"Account Balance\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      name: \"accountBalance\",\n      onChange: handleChange,\n      value: accountBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 45\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"fullname\",\n      onChange: handleChange,\n      value: fullname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(FormControl, {\n      name: \"username\",\n      type: \"text\",\n      value: username,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      minLength: 5,\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      name: \"phone\",\n      value: phone,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 45\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"city\",\n      value: city,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 45\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"country\",\n      value: country,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 45\n      }\n    }, \"Daily Earning\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      value: dailyEarning,\n      name: \"dailyEarning\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }, \"Total Earnings\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      value: totalEarnings,\n      name: \"totalEarnings\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 45\n      }\n    }, \"Active Referrals\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      value: activeReferrals,\n      name: \"activeReferrals\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 45\n      }\n    }, \"Total Referrals\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      value: totalReferrals,\n      name: \"totalReferrals\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 45\n      }\n    }, \"Total Referral Commission\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"number\",\n      value: totalReferralCommission,\n      name: \"totalReferralCommission\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 45\n      }\n    }, \"Bitcoin Address\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"bitcoin\",\n      value: bitcoin,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, \"Ethereum Address\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"ethereum\",\n      value: ethereum,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 41\n      }\n    }, \"Change Password\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: password,\n      name: \"password\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12 col-sm-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 45\n      }\n    }, \"Retype Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: confirmPassword,\n      name: \"confirmNewPassword\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button btn__profile\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 37\n      }\n    }, props.loading ? 'Loading...' : 'Update Profile')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    title: \"\".concat(username, \" Investment\"),\n    category: \"History\",\n    ctTableFullWidth: true,\n    ctTableResponsive: true,\n    content: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 41\n      }\n    }, thDepositArray.map((prop, key) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 56\n        }\n      }, prop);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 37\n      }\n    }, userDeposits.map((Prop, Key) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: Key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 49\n        }\n      }, Object.values(Prop).map((prop, key) => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 65\n          }\n        }, key === 3 ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          value: profit.key,\n          onChange: e => handleMember(e, Prop),\n          name: key,\n          className: \"member__profit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 73\n          }\n        }) : prop);\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn1\",\n        onClick: () => updateMemberProfit(Key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 53\n        }\n      }, props.loading ? 'Loading...' : 'Update Profit'));\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.user.loading,\n    tokenId: state.auth.tokenId,\n    userId: state.auth.userId,\n    member: state.auth.member,\n    memberDeposits: state.auth.memberDeposits,\n    memberId: state.auth.memberId,\n    memberWithdrawals: state.auth.memberWithdrawals\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitGetMember: (token, id) => dispatch(orderAction.initGetMember(token, id)),\n    onInitUpdateMember: (updateMemberData, token) => dispatch(orderAction.initUpdateMember(updateMemberData, token)),\n    onInitUpdateProfit: (updateProfitData, memberId, token) => dispatch(orderAction.initUpdateProfit(updateProfitData, memberId, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);","map":{"version":3,"sources":["/home/niscolinx/projects/fxcryptotokeninvestment/src/views/siteOwner/UserDetails.jsx"],"names":["React","useState","useEffect","useRef","connect","queryString","Grid","Row","Col","ControlLabel","FormControl","FormGroup","Table","Card","orderAction","thDepositArray","UserDetails","props","userDeposits","setUserDeposits","profit","setProfit","gottenAllUser","parsed","parse","window","location","search","current","tokenId","onInitGetMember","id","memberDeposits","accountBalance","setAccountBalance","fullname","setFullname","username","setUsername","email","setEmail","bitcoin","setBitcoin","ethereum","setEthereum","phone","setPhone","country","setCountry","city","setCity","password","setPassword","confirmPassword","setConfirmNewPassword","oldEmail","setOldEmail","activeReferrals","setActiveReferrals","totalReferrals","setTotalReferrals","dailyEarning","setDailyEarning","totalEarnings","setTotalEarnings","totalReferralCommission","setTotalReferralCommission","message","setMessage","error","setError","handleChange","e","name","target","value","handleMember","p","fundNO","updateMemberProfit","i","memberId","length","onInitUpdateProfit","_id","member","fetchedBitcoin","bitcoinAccount","fetchedEmail","fetchedEthereum","ethereumAccount","fetchedFullname","fetchedUsername","fetchedCity","fetchedCountry","fetchedPhone","fetchedDailyEarning","fetchedTotalEarnings","fetchedAccountBalance","fetchedActiveReferrals","fetchedTotalReferrals","fetchedTotalReferralCommission","handleSubmit","preventDefault","formData","Number","onInitUpdateMember","console","log","margin","display","justifySelf","loading","map","prop","key","Prop","Key","Object","values","mapStateToProps","state","user","auth","userId","memberWithdrawals","mapDispatchToProps","dispatch","token","initGetMember","updateMemberData","initUpdateMember","updateProfitData","initUpdateProfit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SACIC,IADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,SANJ,EAOIC,KAPJ,QAQO,iBARP;AAUA,SAASC,IAAT,QAAqB,4BAArB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AAEA,MAAMC,cAAc,GAAG,CAAC,IAAD,EAAO,QAAP,EAAiB,SAAjB,EAA4B,QAA5B,EAAsC,MAAtC,CAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,oBACahB,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QACpBiB,YADoB;AAAA,QACNC,eADM;;AAAA,qBAEClB,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAEpBmB,MAFoB;AAAA,QAEZC,SAFY;;AAI3B,QAAMC,aAAa,GAAGnB,MAAM,EAA5B;AAEA,QAAMoB,MAAM,GAAGlB,WAAW,CAACmB,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACoB,aAAa,CAACM,OAAnB,EAA4B;AACxB,UAAIX,KAAK,CAACY,OAAV,EAAmB;AACfZ,QAAAA,KAAK,CAACa,eAAN,CAAsBP,MAAM,CAACQ,EAA7B,EAAiCd,KAAK,CAACY,OAAvC;AACH;;AACDP,MAAAA,aAAa,CAACM,OAAd,GAAwB,IAAxB;AACH,KALD,MAKO;AACH,UAAIX,KAAK,CAACe,cAAV,EAA0B;AACtBb,QAAAA,eAAe,CAACF,KAAK,CAACe,cAAP,CAAf;AACH;AACJ;AACJ,GAXQ,EAWN,CAACf,KAAD,EAAQM,MAAM,CAACQ,EAAf,CAXM,CAAT;;AAR2B,qBAqBiB9B,QAAQ,CAAC,CAAD,CArBzB;AAAA;AAAA,QAqBpBgC,cArBoB;AAAA,QAqBJC,iBArBI;;AAAA,qBAsBKjC,QAAQ,CAAC,EAAD,CAtBb;AAAA;AAAA,QAsBpBkC,QAtBoB;AAAA,QAsBVC,WAtBU;;AAAA,qBAuBKnC,QAAQ,CAAC,EAAD,CAvBb;AAAA;AAAA,QAuBpBoC,QAvBoB;AAAA,QAuBVC,WAvBU;;AAAA,sBAwBDrC,QAAQ,CAAC,EAAD,CAxBP;AAAA;AAAA,QAwBpBsC,KAxBoB;AAAA,QAwBbC,QAxBa;;AAAA,sBAyBGvC,QAAQ,CAAC,EAAD,CAzBX;AAAA;AAAA,QAyBpBwC,OAzBoB;AAAA,QAyBXC,UAzBW;;AAAA,sBA0BKzC,QAAQ,CAAC,EAAD,CA1Bb;AAAA;AAAA,QA0BpB0C,QA1BoB;AAAA,QA0BVC,WA1BU;;AAAA,sBA2BD3C,QAAQ,CAAC,EAAD,CA3BP;AAAA;AAAA,QA2BpB4C,KA3BoB;AAAA,QA2BbC,QA3Ba;;AAAA,sBA4BG7C,QAAQ,CAAC,EAAD,CA5BX;AAAA;AAAA,QA4BpB8C,OA5BoB;AAAA,QA4BXC,UA5BW;;AAAA,sBA6BH/C,QAAQ,CAAC,EAAD,CA7BL;AAAA;AAAA,QA6BpBgD,IA7BoB;AAAA,QA6BdC,OA7Bc;;AAAA,sBA8BKjD,QAAQ,CAAC,EAAD,CA9Bb;AAAA;AAAA,QA8BpBkD,QA9BoB;AAAA,QA8BVC,WA9BU;;AAAA,sBA+BsBnD,QAAQ,CAAC,EAAD,CA/B9B;AAAA;AAAA,QA+BpBoD,eA/BoB;AAAA,QA+BHC,qBA/BG;;AAAA,sBAiCKrD,QAAQ,CAAC,EAAD,CAjCb;AAAA;AAAA,QAiCpBsD,QAjCoB;AAAA,QAiCVC,WAjCU;;AAAA,sBAkCmBvD,QAAQ,CAAC,CAAD,CAlC3B;AAAA;AAAA,QAkCpBwD,eAlCoB;AAAA,QAkCHC,kBAlCG;;AAAA,sBAmCiBzD,QAAQ,CAAC,CAAD,CAnCzB;AAAA;AAAA,QAmCpB0D,cAnCoB;AAAA,QAmCJC,iBAnCI;;AAAA,sBAoCa3D,QAAQ,CAAC,CAAD,CApCrB;AAAA;AAAA,QAoCpB4D,YApCoB;AAAA,QAoCNC,eApCM;;AAAA,sBAqCe7D,QAAQ,CAAC,CAAD,CArCvB;AAAA;AAAA,QAqCpB8D,aArCoB;AAAA,QAqCLC,gBArCK;;AAAA,sBAsCmC/D,QAAQ,CAAC,CAAD,CAtC3C;AAAA;AAAA,QAsCpBgE,uBAtCoB;AAAA,QAsCKC,0BAtCL;;AAAA,sBAwCGjE,QAAQ,CAAC,EAAD,CAxCX;AAAA;AAAA,QAwCpBkE,OAxCoB;AAAA,QAwCXC,UAxCW;;AAAA,sBAyCDnE,QAAQ,CAAC,KAAD,CAzCP;AAAA;AAAA,QAyCpBoE,KAzCoB;AAAA,QAyCbC,QAzCa;;AA2C3B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;;AAEA,QAAIF,IAAI,KAAK,UAAb,EAAyB;AACrBrC,MAAAA,WAAW,CAACuC,KAAD,CAAX;AACH;;AACD,QAAIF,IAAI,KAAK,cAAb,EAA6B;AACzBX,MAAAA,eAAe,CAACa,KAAD,CAAf;AACH;;AACD,QAAIF,IAAI,KAAK,eAAb,EAA8B;AAC1BT,MAAAA,gBAAgB,CAACW,KAAD,CAAhB;AACH;;AACD,QAAIF,IAAI,KAAK,gBAAb,EAA+B;AAC3BvC,MAAAA,iBAAiB,CAACyC,KAAD,CAAjB;AACH;;AACD,QAAIF,IAAI,KAAK,iBAAb,EAAgC;AAC5Bf,MAAAA,kBAAkB,CAACiB,KAAD,CAAlB;AACH;;AACD,QAAIF,IAAI,KAAK,gBAAb,EAA+B;AAC3Bb,MAAAA,iBAAiB,CAACe,KAAD,CAAjB;AACH;;AACD,QAAIF,IAAI,KAAK,yBAAb,EAAwC;AACpCP,MAAAA,0BAA0B,CAACS,KAAD,CAA1B;AACH;;AACD,QAAIF,IAAI,KAAK,UAAb,EAAyB;AACrBnC,MAAAA,WAAW,CAACqC,KAAD,CAAX;AACH;;AACD,QAAIF,IAAI,KAAK,OAAb,EAAsB;AAClBjC,MAAAA,QAAQ,CAACmC,KAAD,CAAR;AACH;;AACD,QAAIF,IAAI,KAAK,SAAb,EAAwB;AACpB/B,MAAAA,UAAU,CAACiC,KAAD,CAAV;AACH;;AACD,QAAIF,IAAI,KAAK,UAAb,EAAyB;AACrB7B,MAAAA,WAAW,CAAC+B,KAAD,CAAX;AACH;;AACD,QAAIF,IAAI,KAAK,OAAb,EAAsB;AAClB3B,MAAAA,QAAQ,CAAC6B,KAAD,CAAR;AACH;;AACD,QAAIF,IAAI,KAAK,SAAb,EAAwB;AACpBzB,MAAAA,UAAU,CAAC2B,KAAD,CAAV;AACH;;AACD,QAAIF,IAAI,KAAK,MAAb,EAAqB;AACjBvB,MAAAA,OAAO,CAACyB,KAAD,CAAP;AACH;;AACD,QAAIF,IAAI,KAAK,UAAb,EAAyB;AACrBrB,MAAAA,WAAW,CAACuB,KAAD,CAAX;AACH;;AACD,QAAIF,IAAI,KAAK,oBAAb,EAAmC;AAC/BnB,MAAAA,qBAAqB,CAACqB,KAAD,CAArB;AACH;AACJ,GApDD;;AAsDA,QAAMC,YAAY,GAAG,CAACJ,CAAD,EAAIK,CAAJ,KAAU;AAC3BxD,IAAAA,SAAS,CAAC;AACN,OAACwD,CAAC,CAACC,MAAH,GAAYN,CAAC,CAACE,MAAF,CAASC;AADf,KAAD,CAAT;AAGH,GAJD;;AAMA,QAAMI,kBAAkB,GAAIhD,EAAD,IAAQ;AAC/B,SAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/D,KAAK,CAACgE,QAAN,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,UAAIjD,EAAE,KAAKiD,CAAX,EAAc;AAEV/D,QAAAA,KAAK,CAACkE,kBAAN,CACI/D,MAAM,CAAC4D,CAAC,GAAC,CAAH,CADV,EAEI/D,KAAK,CAACgE,QAAN,CAAeD,CAAf,EAAkBI,GAFtB,EAGInE,KAAK,CAACY,OAHV;AAKH;AACJ;AACJ,GAXD;;AAaA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,KAAK,CAACoE,MAAV,EAAkB;AACd,YAAMC,cAAc,GAAGrE,KAAK,CAACoE,MAAN,CAAaE,cAApC;AACA,YAAMC,YAAY,GAAGvE,KAAK,CAACoE,MAAN,CAAa9C,KAAlC;AACA,YAAMkD,eAAe,GAAGxE,KAAK,CAACoE,MAAN,CAAaK,eAArC;AACA,YAAMC,eAAe,GAAG1E,KAAK,CAACoE,MAAN,CAAalD,QAArC;AACA,YAAMyD,eAAe,GAAG3E,KAAK,CAACoE,MAAN,CAAahD,QAArC;AACA,YAAMwD,WAAW,GAAG5E,KAAK,CAACoE,MAAN,CAAapC,IAAjC;AACA,YAAM6C,cAAc,GAAG7E,KAAK,CAACoE,MAAN,CAAatC,OAApC;AACA,YAAMgD,YAAY,GAAG9E,KAAK,CAACoE,MAAN,CAAaxC,KAAlC;AACA,YAAMmD,mBAAmB,GAAG/E,KAAK,CAACoE,MAAN,CAAaxB,YAAzC;AACA,YAAMoC,oBAAoB,GAAGhF,KAAK,CAACoE,MAAN,CAAatB,aAA1C;AACA,YAAMmC,qBAAqB,GAAGjF,KAAK,CAACoE,MAAN,CAAapD,cAA3C;AACA,YAAMkE,sBAAsB,GAAGlF,KAAK,CAACoE,MAAN,CAAa5B,eAA5C;AACA,YAAM2C,qBAAqB,GAAGnF,KAAK,CAACoE,MAAN,CAAa1B,cAA3C;AACA,YAAM0C,8BAA8B,GAChCpF,KAAK,CAACoE,MAAN,CAAapB,uBADjB;AAGA7B,MAAAA,WAAW,CAACuD,eAAD,CAAX;AAEAzC,MAAAA,OAAO,CAAC2C,WAAD,CAAP;AACA7C,MAAAA,UAAU,CAAC8C,cAAD,CAAV;AACAhD,MAAAA,QAAQ,CAACiD,YAAD,CAAR;AACAzD,MAAAA,WAAW,CAACsD,eAAD,CAAX;AAEApD,MAAAA,QAAQ,CAACgD,YAAD,CAAR;AACAhC,MAAAA,WAAW,CAACgC,YAAD,CAAX;AACA9C,MAAAA,UAAU,CAAC4C,cAAD,CAAV;AAEA1C,MAAAA,WAAW,CAAC6C,eAAD,CAAX;AAEA3B,MAAAA,eAAe,CAACkC,mBAAD,CAAf;AACAhC,MAAAA,gBAAgB,CAACiC,oBAAD,CAAhB;AACAvC,MAAAA,kBAAkB,CAACyC,sBAAD,CAAlB;AACAvC,MAAAA,iBAAiB,CAACwC,qBAAD,CAAjB;AACAlC,MAAAA,0BAA0B,CAACmC,8BAAD,CAA1B;AACAnE,MAAAA,iBAAiB,CAACgE,qBAAD,CAAjB;AACH;AACJ,GAtCQ,EAsCN,CAACjF,KAAD,CAtCM,CAAT;;AAwCA,QAAMqF,YAAY,GAAI9B,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAAC+B,cAAF;;AACA,QAAIpD,QAAQ,KAAKE,eAAjB,EAAkC;AAC9Be,MAAAA,UAAU,CAAC,wBAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACH,KAJD,MAIO;AACHF,MAAAA,UAAU,CAAC,sBAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AACD,UAAMkC,QAAQ,GAAG;AACbvE,MAAAA,cAAc,EAAEwE,MAAM,CAACxE,cAAD,CADT;AAEbE,MAAAA,QAFa;AAGbE,MAAAA,QAHa;AAIbc,MAAAA,QAJa;AAKbI,MAAAA,QALa;AAMbhB,MAAAA,KANa;AAObU,MAAAA,IAPa;AAQbY,MAAAA,YAAY,EAAE4C,MAAM,CAAC5C,YAAD,CARP;AASbE,MAAAA,aAAa,EAAE0C,MAAM,CAAC1C,aAAD,CATR;AAUbN,MAAAA,eAAe,EAAEgD,MAAM,CAAChD,eAAD,CAVV;AAWbE,MAAAA,cAAc,EAAE8C,MAAM,CAAC9C,cAAD,CAXT;AAYbM,MAAAA,uBAAuB,EAAEwC,MAAM,CAACxC,uBAAD,CAZlB;AAablB,MAAAA,OAba;AAcbF,MAAAA,KAda;AAebF,MAAAA,QAfa;AAgBbF,MAAAA,OAhBa;AAiBbY,MAAAA;AAjBa,KAAjB;AAoBApC,IAAAA,KAAK,CAACyF,kBAAN,CAAyBF,QAAzB,EAAmCvF,KAAK,CAACY,OAAzC;AACH,GA/BD;;AAiCA8E,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACxF,IAAAA;AAAD,GAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEyF,MAAAA,MAAM,EAAE;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,OAAO,eACH;AAAM,MAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnC,OAAO,iBACJ;AACI,MAAA,SAAS,EACLE,KAAK,GACC,wBADD,GAEC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKF,OAPL,CAFR,eAYI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,QAAQ,EAAEI,YAHd;AAII,MAAA,KAAK,EAAEtC,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CAZJ,eAyBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,QAAQ,EAAEsC,YAHd;AAII,MAAA,KAAK,EAAEpC,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CAzBJ,eAsCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAEE,QAHX;AAII,MAAA,QAAQ,EAAEkC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAYI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAE,CADf;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAEhC,KAJX;AAKI,MAAA,QAAQ,EAAEgC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,CAtCJ,eA6DI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE1B,KAHX;AAII,MAAA,QAAQ,EAAE0B,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAYI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAEtB,IAHX;AAII,MAAA,QAAQ,EAAEsB,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,eAsBI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAExB,OAHX;AAII,MAAA,QAAQ,EAAEwB,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAtBJ,CA7DJ,eA8FI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEV,YAFX;AAGI,MAAA,IAAI,EAAC,cAHT;AAII,MAAA,QAAQ,EAAEU,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAaI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAER,aAFX;AAGI,MAAA,IAAI,EAAC,eAHT;AAII,MAAA,QAAQ,EAAEQ,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAbJ,eAwBI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEd,eAFX;AAGI,MAAA,IAAI,EAAC,iBAHT;AAII,MAAA,QAAQ,EAAEc,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAxBJ,eAmCI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEZ,cAFX;AAGI,MAAA,IAAI,EAAC,gBAHT;AAII,MAAA,QAAQ,EAAEY,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAnCJ,eA8CI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEN,uBAFX;AAGI,MAAA,IAAI,EAAC,yBAHT;AAII,MAAA,QAAQ,EAAEM,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CA9CJ,CA9FJ,eAyJI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE9B,OAHX;AAII,MAAA,QAAQ,EAAE8B,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAYI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE5B,QAHX;AAII,MAAA,QAAQ,EAAE4B,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAZJ,CAzJJ,eAiLI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAjLJ,eAoLI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAEpB,QAFX;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,QAAQ,EAAEoB,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAaI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,WAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAElB,eAFX;AAGI,MAAA,IAAI,EAAC,oBAHT;AAII,MAAA,QAAQ,EAAEkB,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAbJ,CApLJ,eA6MI;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKtD,KAAK,CAAC+F,OAAN,GACK,YADL,GAEK,gBANV,CA7MJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,eAoOI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,KAAK,YAAK3E,QAAL,gBAFT;AAGI,IAAA,QAAQ,EAAC,SAHb;AAII,IAAA,gBAAgB,MAJpB;AAKI,IAAA,iBAAiB,MALrB;AAMI,IAAA,OAAO,eACH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKtB,cAAc,CAACkG,GAAf,CAAmB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,0BAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeD,IAAf,CAAP;AACH,KAFA,CADL,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhG,YAAY,CAAC+F,GAAb,CAAiB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC7B,0BACI;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBH,GAApB,CACG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACX,4BACI;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,GAAG,KACJ,CADC,gBAEG;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,KAAK,EACD/F,MAAM,CAAC+F,GAHf;AAKI,UAAA,QAAQ,EACZ3C,CADc,IAGdI,YAAY,CACRJ,CADQ,EAER4C,IAFQ,CARZ;AAaJ,UAAA,IAAI,EACAD,GAdA;AAgBJ,UAAA,SAAS,EAAC,gBAhBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH,GAqBGD,IAtBR,CADJ;AA2BH,OA7BJ,CADL,eAgCI;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAE,MACLnC,kBAAkB,CACdsC,GADc,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKpG,KAAK,CAAC+F,OAAN,GACK,YADL,GAEK,eAVV,CAhCJ,CADJ;AA+CH,KAhDA,CADL,CARJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CApOJ,CADJ;AAkTH,CAhfD;;AAkfA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,OAAO,EAAES,KAAK,CAACC,IAAN,CAAWV,OADjB;AAEHnF,IAAAA,OAAO,EAAE4F,KAAK,CAACE,IAAN,CAAW9F,OAFjB;AAGH+F,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC,MAHhB;AAIHvC,IAAAA,MAAM,EAAEoC,KAAK,CAACE,IAAN,CAAWtC,MAJhB;AAKHrD,IAAAA,cAAc,EAAEyF,KAAK,CAACE,IAAN,CAAW3F,cALxB;AAMHiD,IAAAA,QAAQ,EAAEwC,KAAK,CAACE,IAAN,CAAW1C,QANlB;AAOH4C,IAAAA,iBAAiB,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAP3B,GAAP;AASH,CAVD;;AAYA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHjG,IAAAA,eAAe,EAAE,CAACkG,KAAD,EAAQjG,EAAR,KACbgG,QAAQ,CAACjH,WAAW,CAACmH,aAAZ,CAA0BD,KAA1B,EAAiCjG,EAAjC,CAAD,CAFT;AAGH2E,IAAAA,kBAAkB,EAAE,CAACwB,gBAAD,EAAmBF,KAAnB,KAChBD,QAAQ,CAACjH,WAAW,CAACqH,gBAAZ,CAA6BD,gBAA7B,EAA+CF,KAA/C,CAAD,CAJT;AAKH7C,IAAAA,kBAAkB,EAAE,CAACiD,gBAAD,EAAmBnD,QAAnB,EAA6B+C,KAA7B,KAChBD,QAAQ,CACJjH,WAAW,CAACuH,gBAAZ,CAA6BD,gBAA7B,EAA+CnD,QAA/C,EAAyD+C,KAAzD,CADI;AANT,GAAP;AAUH,CAXD;;AAYA,eAAe5H,OAAO,CAACoH,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C9G,WAA7C,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\nimport {\n    Grid,\n    Row,\n    Col,\n    ControlLabel,\n    FormControl,\n    FormGroup,\n    Table,\n} from 'react-bootstrap'\n\nimport { Card } from '../../components/Card/Card'\n\nimport * as orderAction from '../../store/actions/burgerIndex'\n\nconst thDepositArray = ['No', 'Amount', 'Package', 'profit', 'Date']\n\nconst UserDetails = (props) => {\n    const [userDeposits, setUserDeposits] = useState([])\n    const [profit, setProfit] = useState({})\n\n    const gottenAllUser = useRef()\n\n    const parsed = queryString.parse(window.location.search)\n\n    useEffect(() => {\n        if (!gottenAllUser.current) {\n            if (props.tokenId) {\n                props.onInitGetMember(parsed.id, props.tokenId)\n            }\n            gottenAllUser.current = true\n        } else {\n            if (props.memberDeposits) {\n                setUserDeposits(props.memberDeposits)\n            }\n        }\n    }, [props, parsed.id])\n\n    const [accountBalance, setAccountBalance] = useState(0)\n    const [fullname, setFullname] = useState('')\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [bitcoin, setBitcoin] = useState('')\n    const [ethereum, setEthereum] = useState('')\n    const [phone, setPhone] = useState('')\n    const [country, setCountry] = useState('')\n    const [city, setCity] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmNewPassword] = useState('')\n\n    const [oldEmail, setOldEmail] = useState('')\n    const [activeReferrals, setActiveReferrals] = useState(0)\n    const [totalReferrals, setTotalReferrals] = useState(0)\n    const [dailyEarning, setDailyEarning] = useState(0)\n    const [totalEarnings, setTotalEarnings] = useState(0)\n    const [totalReferralCommission, setTotalReferralCommission] = useState(0)\n\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState(false)\n\n    const handleChange = (e) => {\n        const name = e.target.name\n        const value = e.target.value\n\n        if (name === 'fullname') {\n            setFullname(value)\n        }\n        if (name === 'dailyEarning') {\n            setDailyEarning(value)\n        }\n        if (name === 'totalEarnings') {\n            setTotalEarnings(value)\n        }\n        if (name === 'accountBalance') {\n            setAccountBalance(value)\n        }\n        if (name === 'activeReferrals') {\n            setActiveReferrals(value)\n        }\n        if (name === 'totalReferrals') {\n            setTotalReferrals(value)\n        }\n        if (name === 'totalReferralCommission') {\n            setTotalReferralCommission(value)\n        }\n        if (name === 'username') {\n            setUsername(value)\n        }\n        if (name === 'email') {\n            setEmail(value)\n        }\n        if (name === 'bitcoin') {\n            setBitcoin(value)\n        }\n        if (name === 'ethereum') {\n            setEthereum(value)\n        }\n        if (name === 'phone') {\n            setPhone(value)\n        }\n        if (name === 'country') {\n            setCountry(value)\n        }\n        if (name === 'city') {\n            setCity(value)\n        }\n        if (name === 'password') {\n            setPassword(value)\n        }\n        if (name === 'confirmNewPassword') {\n            setConfirmNewPassword(value)\n        }\n    }\n\n    const handleMember = (e, p) => {\n        setProfit({\n            [p.fundNO]: e.target.value,\n        })\n    }\n\n    const updateMemberProfit = (id) => {\n        for (let i = 0; i < props.memberId.length; i++) {\n            if (id === i) {\n          \n                props.onInitUpdateProfit(\n                    profit[i+1],\n                    props.memberId[i]._id,\n                    props.tokenId\n                )\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (props.member) {\n            const fetchedBitcoin = props.member.bitcoinAccount\n            const fetchedEmail = props.member.email\n            const fetchedEthereum = props.member.ethereumAccount\n            const fetchedFullname = props.member.fullname\n            const fetchedUsername = props.member.username\n            const fetchedCity = props.member.city\n            const fetchedCountry = props.member.country\n            const fetchedPhone = props.member.phone\n            const fetchedDailyEarning = props.member.dailyEarning\n            const fetchedTotalEarnings = props.member.totalEarnings\n            const fetchedAccountBalance = props.member.accountBalance\n            const fetchedActiveReferrals = props.member.activeReferrals\n            const fetchedTotalReferrals = props.member.totalReferrals\n            const fetchedTotalReferralCommission =\n                props.member.totalReferralCommission\n\n            setFullname(fetchedFullname)\n\n            setCity(fetchedCity)\n            setCountry(fetchedCountry)\n            setPhone(fetchedPhone)\n            setUsername(fetchedUsername)\n\n            setEmail(fetchedEmail)\n            setOldEmail(fetchedEmail)\n            setBitcoin(fetchedBitcoin)\n\n            setEthereum(fetchedEthereum)\n\n            setDailyEarning(fetchedDailyEarning)\n            setTotalEarnings(fetchedTotalEarnings)\n            setActiveReferrals(fetchedActiveReferrals)\n            setTotalReferrals(fetchedTotalReferrals)\n            setTotalReferralCommission(fetchedTotalReferralCommission)\n            setAccountBalance(fetchedAccountBalance)\n        }\n    }, [props])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n            setError(true)\n            return\n        } else {\n            setMessage('Updated successfully')\n            setError(false)\n        }\n        const formData = {\n            accountBalance: Number(accountBalance),\n            fullname,\n            username,\n            password,\n            oldEmail,\n            email,\n            city,\n            dailyEarning: Number(dailyEarning),\n            totalEarnings: Number(totalEarnings),\n            activeReferrals: Number(activeReferrals),\n            totalReferrals: Number(totalReferrals),\n            totalReferralCommission: Number(totalReferralCommission),\n            country,\n            phone,\n            ethereum,\n            bitcoin,\n            confirmPassword,\n        }\n\n        props.onInitUpdateMember(formData, props.tokenId)\n    }\n\n    console.log({profit})\n    return (\n        <div className='center' style={{ margin: '2rem 0' }}>\n            <Grid fluid>\n                <Row style={{ display: 'grid' }}>\n                    <Col md='8' style={{ justifySelf: 'center' }}>\n                        <Card\n                            title='User Details'\n                            content={\n                                <form onSubmit={handleSubmit}>\n                                    {message && (\n                                        <p\n                                            className={\n                                                error\n                                                    ? 'message message__error'\n                                                    : 'message'\n                                            }\n                                        >\n                                            {message}\n                                        </p>\n                                    )}\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Account Balance\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                name='accountBalance'\n                                                onChange={handleChange}\n                                                value={accountBalance}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Full Name\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='fullname'\n                                                onChange={handleChange}\n                                                value={fullname}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Username\n                                            </ControlLabel>\n                                            <FormControl\n                                                name='username'\n                                                type='text'\n                                                value={username}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>Email</ControlLabel>\n                                            <FormControl\n                                                minLength={5}\n                                                type='text'\n                                                name='email'\n                                                value={email}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Phone Number\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                name='phone'\n                                                value={phone}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>City</ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='city'\n                                                value={city}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>Country</ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='country'\n                                                value={country}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Daily Earning\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                value={dailyEarning}\n                                                name='dailyEarning'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Total Earnings\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                value={totalEarnings}\n                                                name='totalEarnings'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Active Referrals\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                value={activeReferrals}\n                                                name='activeReferrals'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Total Referrals\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                value={totalReferrals}\n                                                name='totalReferrals'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Total Referral Commission\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='number'\n                                                value={totalReferralCommission}\n                                                name='totalReferralCommission'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Bitcoin Address\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='bitcoin'\n                                                value={bitcoin}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Ethereum Address\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='text'\n                                                name='ethereum'\n                                                value={ethereum}\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <div>\n                                        <h4>Change Password</h4>\n                                    </div>\n                                    <Row>\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                New Password\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='password'\n                                                value={password}\n                                                name='password'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup className='col-md-12 col-sm-12 col-xs-12'>\n                                            <ControlLabel>\n                                                Retype Password\n                                            </ControlLabel>\n                                            <FormControl\n                                                type='password'\n                                                value={confirmPassword}\n                                                name='confirmNewPassword'\n                                                onChange={handleChange}\n                                            />\n                                        </FormGroup>\n                                    </Row>\n                                    <button\n                                        className='button btn__profile'\n                                        type='submit'\n                                    >\n                                        {props.loading\n                                            ? 'Loading...'\n                                            : 'Update Profile'}\n                                    </button>\n                                    {/* <div className='clearfix' /> */}\n                                </form>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n\n            <Grid fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card\n                            plain\n                            title={`${username} Investment` }\n                            category='History'\n                            ctTableFullWidth\n                            ctTableResponsive\n                            content={\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            {thDepositArray.map((prop, key) => {\n                                                return <th key={key}>{prop}</th>\n                                            })}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {userDeposits.map((Prop, Key) => {\n                                            return (\n                                                <tr key={Key}>\n                                                    {Object.values(Prop).map(\n                                                        (prop, key) => {\n                                                            return (\n                                                                <td key={key}>\n                                                                    {key ===\n                                                                    3 ? (\n                                                                        <input\n                                                                            type='number'\n                                                                            value={\n                                                                                profit.key\n                                                                            }\n                                                                            onChange={(\n                                                                        e\n                                                                    ) =>\n                                                                        handleMember(\n                                                                            e,\n                                                                            Prop\n                                                                        )\n                                                                    }\n                                                                    name={\n                                                                        key\n                                                                    }\n                                                                    className='member__profit'\n                                                                />\n                                                                    ) : (\n                                                                        prop\n                                                                    )}\n                                                                </td>\n                                                            )\n                                                        }\n                                                    )}\n                                                    <button\n                                                        className='btn1'\n                                                        onClick={() =>\n                                                            updateMemberProfit(\n                                                                Key\n                                                            )\n                                                        }\n                                                    >\n                                                        {props.loading\n                                                            ? 'Loading...'\n                                                            : 'Update Profit'}\n                                                    </button>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </Table>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.user.loading,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n        member: state.auth.member,\n        memberDeposits: state.auth.memberDeposits,\n        memberId: state.auth.memberId,\n        memberWithdrawals: state.auth.memberWithdrawals,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitGetMember: (token, id) =>\n            dispatch(orderAction.initGetMember(token, id)),\n        onInitUpdateMember: (updateMemberData, token) =>\n            dispatch(orderAction.initUpdateMember(updateMemberData, token)),\n        onInitUpdateProfit: (updateProfitData, memberId, token) =>\n            dispatch(\n                orderAction.initUpdateProfit(updateProfitData, memberId, token)\n            ),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails)\n"]},"metadata":{},"sourceType":"module"}